{"version":3,"sources":["webpack://ENABLE3D/webpack/universalModuleDefinition","webpack://ENABLE3D/webpack/bootstrap","webpack://ENABLE3D/external \"THREE\"","webpack://ENABLE3D//home/yannick/enable3d/node_modules/eventemitter3/index.js","webpack://ENABLE3D/external \"EXAMPLES\"","webpack://ENABLE3D/../common/src/logger.ts","webpack://ENABLE3D/./src/convexObjectBreaker.ts","webpack://ENABLE3D/./src/physicsBody.ts","webpack://ENABLE3D/../common/src/applyMixins.ts","webpack://ENABLE3D/./src/shapes.ts","webpack://ENABLE3D/./src/constraints.ts","webpack://ENABLE3D/./src/events.ts","webpack://ENABLE3D/./src/debugDrawer.ts","webpack://ENABLE3D/./src/physics.ts","webpack://ENABLE3D/../common/src/extendedObject3D.ts","webpack://ENABLE3D/./src/three-to-ammo.js","webpack://ENABLE3D/./src/torusShape.ts","webpack://ENABLE3D/../common/src/extendedMesh.ts","webpack://ENABLE3D/../common/src/defaultMaterial.ts","webpack://ENABLE3D/../common/src/factories.ts","webpack://ENABLE3D/../common/src/wasmLoader.ts","webpack://ENABLE3D/../common/src/physicsLoader.ts","webpack://ENABLE3D/./src/index.ts","webpack://ENABLE3D/./src/bundle.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","has","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","v1","msg","console","error","physics","ammo","offset","x","y","z","errors","checkCollisions","breakable","collided","didUpdate","_emitUpdateEvents","_needUpdate","tmpBtVector3","Ammo","btVector3","setupEventEmitter","eventEmitter","need","onUpdateEvent","updateCallback","update","collision","collisionCallback","onCollision","data","bodies","getLinearVelocity","getAngularVelocity","setVelocity","setValue","setLinearVelocity","setVelocityX","velocity","setVelocityY","setVelocityZ","setAngularVelocity","setAngularVelocityX","angularVelocity","setAngularVelocityY","setAngularVelocityZ","applyForce","applyCentralImpulse","applyForceX","applyForceY","applyForceZ","setCollisionFlags","getCollisionFlags","setRestitution","setBounciness","setLinearFactor","setAngularFactor","setFriction","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","objectsAmmo","addSphere","sphereConfig","materialConfig","sphere","add","addExisting","addBox","boxConfig","box","addGround","groundConfig","ground","config","mass","collisionFlags","addCylinder","cylinderConfig","cylinder","addTorus","torusConfig","torus","addExtrude","extrudeConfig","extrude","translateX","lock","body","targetBody","fixed","spring","slider","hinge","coneTwist","targetPivot","pointToPoint","getTransform","bodyTransform","getCenterOfMassTransform","inverse","op_mul","getWorldTransform","targetTransform","btTransform","setIdentity","target","transform","constraint","btGeneric6DofConstraint","zero","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","physicsWorld","addConstraint","setRotation","getRotation","btFixedConstraint","stiffness","damping","angularLock","btGeneric6DofSpringConstraint","enableSpring","setStiffness","setDamping","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","pivot","axis","targetAxis","pivotV3","targetPivotV3","axisV3","targetAxisV3","btHingeConstraint","pivotTransform","getOrigin","btConeTwistConstraint","btPoint2PointConstraint","addCollider","object1","object2","eventCallback","AmmoDebugConstants","scene","world","options","debugDrawMode","drawOnTop","maxBufferSize","geometry","vertices","Float32Array","colors","setAttribute","setUsage","index","material","vertexColors","depthTest","mesh","renderOrder","frustumCulled","enabled","debugDrawer","DebugDrawer","drawLine","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","setDebugDrawer","enable","disable","remove","attributes","position","needsUpdate","color","debugDrawWorld","setDrawRange","from","to","heap","HEAPF32","g","b","fromX","fromY","fromZ","setXYZ","toX","toY","toZ","pointOnB","normalOnB","distance","_lifeTime","dx","dy","dz","warningString","warn","Pointer_stringify","warnedOnce","_location","_textString","debugMode","ConvexObjectBreaker","minSizeForBreak","smallDelta","tempLine1","tempPlane1","tempPlane2","tempPlane_Cut","tempCM1","tempCM2","tempVector3","tempVector3_2","tempVector3_3","tempVector3_P0","tempVector3_P1","tempVector3_P2","tempVector3_N0","tempVector3_N1","tempVector3_AB","tempVector3_CB","tempResultObjects","segments","constructor","prepareBreakableObject","isBufferGeometry","userData","clone","subdivideByImpact","pointOfImpact","normal","maxRadialIterations","maxRandomIterations","debris","addVectors","setFromCoplanarPoints","maxTotalIterations","scope","subdivideRadial","subObject","startAngle","endAngle","numIterations","Math","random","angle","PI","copy","constant","sub","applyAxisAngle","cutByPlane","obj1","obj2","plane","output","coords","array","normals","numPoints","numFaces","indices","getIndex","getVertexIndex","faceIdx","vert","idx","points1","points2","delta","numPointPairs","p0","p1","n0","n1","b1","c1","set","b2","c2","dot","localPlane","updateMatrix","transformPlaneToLocalSpace","matrix","va","vb","vc","segment","i0","i1","mark0","distanceToPoint","mark1","start","end","intersection","intersectLine","segmentedObject1","segmentedObject2","newMass","radius1","numPoints1","divideScalar","max","radius2","numPoints2","numObjects","quaternion","transformFreeVector","v","e","elements","transformFreeVectorInverse","transformTiedVectorInverse","resultPlane","referencePoint","coplanarPoint","rigidBodies","earlierDetectedCollisions","setup","convexBreaker","objectsToRemove","numObjectsToRemove","setupPhysicsWorld","updateDebugger","gravity","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","tmpTrans","createDebrisFromBreakableObject","parent","defaultMaterial","shape","fragmentDepth","setTimeout","removeDebris","removeRigidBody","ptr","impactPoint","impactNormal","detectedCollisions","deltaTime","stepSimulation","maxSubSteps","fixedTimeStep","il","objThree","ms","getMotionState","isKinematicObject","needUpdate","getWorldQuaternion","tmpQuaternion","getWorldPosition","tmpVector3","tmpBtQuaternion","w","setOrigin","setWorldTransform","q","contactPoint","impulse","pos","vel","angVel","fragment","contactManifold","getManifoldByIndexInternal","keys","getBody0","body0","castObject","btRigidBody","body1","getBody1","ptr0","ptr1","threeObject0","threeObject1","breakable0","breakable1","collided0","collided1","checkCollisions0","checkCollisions1","sort","find","el","combinedName","contact","maxImpulse","jl","getNumContacts","getContactPoint","getDistance","getAppliedImpulse","get_m_positionWorldOnB","get_m_normalWorldOnB","emptyV3","physicsBody","getNumManifolds","split","obj0","obj","vector3","hasBody","anims","currentAnimation","id","theta","worldTheta","phi","worldPhi","getWorldDirection","atan2","acos","setAction","mixer","action","clipAction","time","stopAllAction","fadeIn","play","TYPE","FIT","hasUpdateMatricesFunction","createCollisionShapes","type","createBoxShape","createCylinderShape","createCapsuleShape","createConeShape","createSphereShape","createHullShape","createHACDShapes","createVHACDShapes","createTriMeshShape","createHeightfieldTerrainShape","_setOptions","fit","halfExtents","_computeHalfExtents","_computeBounds","minHalfExtent","maxHalfExtent","btHalfExtents","collisionShape","btBoxShape","destroy","_finishCollisionShape","_computeScale","cylinderAxis","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","btConeShape","btConeShapeX","btConeShapeZ","radius","isNaN","sphereRadius","_computeRadius","btSphereShape","vertex","center","bounds","btVertex","originalHull","btConvexHullShape","setMargin","margin","min","multiplyScalar","vertexCount","_iterateGeometries","geo","maxVertices","hullMaxVertices","adjustGeometryTranslateEXPERIMENTAL","components","applyMatrix4","addPoint","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","scale","triCount","hacd","HACD","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","points","_malloc","triangles","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","pi","px","py","pz","count","vhacd","VHACD","params","Parameters","set_m_resolution","resolution","set_m_depth","depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","bta","btb","btc","triMesh","btTriangleMesh","ai","bi","ci","addTriangle","concave","btBvhTriangleMeshShape","btConvexTriangleMeshShape","resources","heightfieldDistance","heightfieldData","heightScale","upAxis","hdt","heightDataType","PHY_SHORT","PHY_FLOAT","flipQuadEdges","heightStickLength","heightStickWidth","minHeight","Number","POSITIVE_INFINITY","maxHeight","NEGATIVE_INFINITY","height","btHeightfieldTerrainShape","setLocalScaling","includeInvisible","orientation","res","localScale","bufferGeometry","cb","getInverse","matrixWorld","traverse","isMesh","identity","updateMatrices","multiplyMatrices","fromGeometry","maxRadiusSq","cx","cy","cz","getCenter","sqrt","subVectors","clampScalar","minX","Infinity","minY","minZ","maxX","maxY","maxZ","computeBoundingBox","boundingBox","makeTranslation","_defaultMaterial","makeBox","makeSphere","makeCylinder","makeTorus","makeExtrude","addMesh","existing","addMaterial","isArray","createMesh","castShadow","receiveShadow","autoCenter","bevelEnabled","rest","widthSegments","heightSegments","phiStart","phiLength","thetaStart","thetaLength","width","depthSegments","rotateX","degToRad","radiusTop","radiusBottom","radiusSegments","openEnded","tube","radialSegments","tubularSegments","arc","basic","standard","lambert","phong","physical","toon","line","custom","wasmSupported","WebAssembly","instantiate","Module","Uint8Array","of","Instance","loadScriptAsync","url","doneCallback","tag","document","createElement","onload","onerror","Error","async","src","head","appendChild","path","PhysicsLoader","callback","__loadPhysics","then","tmpEuler","btQuaternion","version","log","collider","constraints","addConstraints","addCompoundShape","compoundShape","btCompoundShape","tmp","addChildShape","quat","addRigidBody","defaultParams","children","child","test","parameters","Shape","addShape","addRigidBodyToShape","addBodyProperties","opts","SIMD_PI","subdivisions","gap","cos","cylinderShape","forward","side","rotation","rotate","addTorusShape","createRigidBody","physicsShape","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","threeObject","rigidBody","setActivationState","values","friction"],"mappings":"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","file":"enable3d.ammoPhysics@0.0.14.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"), require(\"EXAMPLES\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\", \"EXAMPLES\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ENABLE3D\"] = factory(require(\"THREE\"), require(\"EXAMPLES\"));\n\telse\n\t\troot[\"ENABLE3D\"] = factory(root[\"THREE\"], root[\"EXAMPLES\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","const logger = (msg: string) => {\n  console.error(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55')\n}\n\nexport default logger\n","/**\n * Copied from three.js examples and added a fix\n */\n\n/**\n * @author yomboprime https://github.com/yomboprime\n *\n * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.\n *\n * Usage:\n *\n * Use the function prepareBreakableObject to prepare a Mesh object to be broken.\n *\n * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)\n *\n * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.\n *\n * Requisites for the object:\n *\n *  - Mesh object must have a BufferGeometry (not Geometry) and a Material\n *\n *  - Vertex normals must be planar (not smoothed)\n *\n *  - The geometry must be convex (this is not checked in the library). You can create convex\n *  geometries with ConvexBufferGeometry. The BoxBufferGeometry, SphereBufferGeometry and other convex primitives\n *  can also be used.\n *\n * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)\n * Use with caution and read the code when using with other libs.\n *\n * @param {double} minSizeForBreak Min size a debris can have to break.\n * @param {double} smallDelta Max distance to consider that a point belongs to a plane.\n *\n */\n\nimport { Line3, Mesh, Plane, Vector3 } from '@enable3d/three-wrapper/src/index'\nimport { ConvexBufferGeometry } from '@enable3d/three-wrapper/src/examples'\nimport logger from '@enable3d/common/src/logger'\n\nconst ConvexObjectBreaker = function(minSizeForBreak?: number, smallDelta?: number) {\n  // @ts-ignore\n  this.minSizeForBreak = minSizeForBreak || 1.4\n  // @ts-ignore\n  this.smallDelta = smallDelta || 0.0001\n\n  // @ts-ignore\n  this.tempLine1 = new Line3()\n  // @ts-ignore\n  this.tempPlane1 = new Plane()\n  // @ts-ignore\n  this.tempPlane2 = new Plane()\n  // @ts-ignore\n  this.tempPlane_Cut = new Plane()\n  // @ts-ignore\n  this.tempCM1 = new Vector3()\n  // @ts-ignore\n  this.tempCM2 = new Vector3()\n  // @ts-ignore\n  this.tempVector3 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_2 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_3 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_P0 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_P1 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_P2 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_N0 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_N1 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_AB = new Vector3()\n  // @ts-ignore\n  this.tempVector3_CB = new Vector3()\n  // @ts-ignore\n  this.tempResultObjects = { object1: null, object2: null }\n\n  // @ts-ignore\n  this.segments = []\n  var n = 30 * 30\n  // @ts-ignore\n  for (var i = 0; i < n; i++) this.segments[i] = false\n}\n\nConvexObjectBreaker.prototype = {\n  constructor: ConvexObjectBreaker,\n\n  prepareBreakableObject: function(object: any, mass: any, velocity: any, angularVelocity: any, breakable: any) {\n    // object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.\n    // Its material property is propagated to its children (sub-pieces)\n    // mass must be > 0\n\n    if (!object.geometry.isBufferGeometry) {\n      console.error('THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.')\n    }\n\n    var userData = object.userData\n    userData.mass = mass\n    userData.velocity = velocity.clone()\n    userData.angularVelocity = angularVelocity.clone()\n    userData.breakable = breakable\n  },\n\n  /*\n   * @param {int} maxRadialIterations Iterations for radial cuts.\n   * @param {int} maxRandomIterations Max random iterations for not-radial cuts\n   *\n   * Returns the array of pieces\n   */\n  subdivideByImpact: function(\n    object: any,\n    pointOfImpact: any,\n    normal: any,\n    maxRadialIterations: any,\n    maxRandomIterations: any\n  ) {\n    var debris: any = []\n\n    var tempPlane1 = this.tempPlane1\n    var tempPlane2 = this.tempPlane2\n\n    this.tempVector3.addVectors(pointOfImpact, normal)\n    tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3)\n\n    var maxTotalIterations = maxRandomIterations + maxRadialIterations\n\n    var scope = this\n\n    function subdivideRadial(subObject: any, startAngle: any, endAngle: any, numIterations: any) {\n      if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\n        debris.push(subObject)\n\n        return\n      }\n\n      var angle = Math.PI\n\n      if (numIterations === 0) {\n        tempPlane2.normal.copy(tempPlane1.normal)\n        tempPlane2.constant = tempPlane1.constant\n      } else {\n        if (numIterations <= maxRadialIterations) {\n          angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle\n\n          // Rotate tempPlane2 at impact point around normal axis and the angle\n          scope.tempVector3_2\n            .copy(object.position)\n            .sub(pointOfImpact)\n            .applyAxisAngle(normal, angle)\n            .add(pointOfImpact)\n          tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2)\n        } else {\n          angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI\n\n          // Rotate tempPlane2 at object position around normal axis and the angle\n          scope.tempVector3_2\n            .copy(pointOfImpact)\n            .sub(subObject.position)\n            .applyAxisAngle(normal, angle)\n            .add(subObject.position)\n          scope.tempVector3_3.copy(normal).add(subObject.position)\n          tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2)\n        }\n      }\n\n      // Perform the cut\n      scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects)\n\n      var obj1 = scope.tempResultObjects.object1\n      var obj2 = scope.tempResultObjects.object2\n\n      if (obj1) {\n        subdivideRadial(obj1, startAngle, angle, numIterations + 1)\n      }\n\n      if (obj2) {\n        subdivideRadial(obj2, angle, endAngle, numIterations + 1)\n      }\n    }\n\n    subdivideRadial(object, 0, 2 * Math.PI, 0)\n\n    return debris\n  },\n\n  cutByPlane: function(object: any, plane: any, output: any) {\n    // Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.\n    // object2 can be null if the plane doesn't cut the object.\n    // object1 can be null only in case of internal error\n    // Returned value is number of pieces, 0 for error.\n\n    var geometry = object.geometry\n    var coords = geometry.attributes.position.array\n    var normals = geometry.attributes.normal.array\n\n    var numPoints = coords.length / 3\n    var numFaces = numPoints / 3\n\n    var indices = geometry.getIndex()\n\n    if (indices) {\n      indices = indices.array\n      numFaces = indices.length / 3\n    }\n\n    function getVertexIndex(faceIdx: any, vert: any) {\n      // vert = 0, 1 or 2.\n\n      var idx = faceIdx * 3 + vert\n\n      return indices ? indices[idx] : idx\n    }\n\n    var points1 = []\n    var points2 = []\n\n    var delta = this.smallDelta\n\n    // Reset segments mark\n    var numPointPairs = numPoints * numPoints\n    for (var i = 0; i < numPointPairs; i++) this.segments[i] = false\n\n    var p0 = this.tempVector3_P0\n    var p1 = this.tempVector3_P1\n    var n0 = this.tempVector3_N0\n    var n1 = this.tempVector3_N1\n\n    // Iterate through the faces to mark edges shared by coplanar faces\n    for (var i = 0; i < numFaces - 1; i++) {\n      var a1 = getVertexIndex(i, 0)\n      var b1 = getVertexIndex(i, 1)\n      var c1 = getVertexIndex(i, 2)\n\n      // Assuming all 3 vertices have the same normal\n      n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2)\n\n      for (var j = i + 1; j < numFaces; j++) {\n        var a2 = getVertexIndex(j, 0)\n        var b2 = getVertexIndex(j, 1)\n        var c2 = getVertexIndex(j, 2)\n\n        // Assuming all 3 vertices have the same normal\n        n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2)\n\n        var coplanar = 1 - n0.dot(n1) < delta\n\n        if (coplanar) {\n          if (a1 === a2 || a1 === b2 || a1 === c2) {\n            if (b1 === a2 || b1 === b2 || b1 === c2) {\n              this.segments[a1 * numPoints + b1] = true\n              this.segments[b1 * numPoints + a1] = true\n            } else {\n              this.segments[c1 * numPoints + a1] = true\n              this.segments[a1 * numPoints + c1] = true\n            }\n          } else if (b1 === a2 || b1 === b2 || b1 === c2) {\n            this.segments[c1 * numPoints + b1] = true\n            this.segments[b1 * numPoints + c1] = true\n          }\n        }\n      }\n    }\n\n    // Transform the plane to object local space\n    var localPlane = this.tempPlane_Cut\n    object.updateMatrix()\n    ConvexObjectBreaker.transformPlaneToLocalSpace(plane, object.matrix, localPlane)\n\n    // Iterate through the faces adding points to both pieces\n    for (var i = 0; i < numFaces; i++) {\n      var va = getVertexIndex(i, 0)\n      var vb = getVertexIndex(i, 1)\n      var vc = getVertexIndex(i, 2)\n\n      for (var segment = 0; segment < 3; segment++) {\n        var i0 = segment === 0 ? va : segment === 1 ? vb : vc\n        var i1 = segment === 0 ? vb : segment === 1 ? vc : va\n\n        var segmentState = this.segments[i0 * numPoints + i1]\n\n        if (segmentState) continue // The segment already has been processed in another face\n\n        // Mark segment as processed (also inverted segment)\n        this.segments[i0 * numPoints + i1] = true\n        this.segments[i1 * numPoints + i0] = true\n\n        p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2])\n        p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2])\n\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\n        var mark0 = 0\n\n        var d = localPlane.distanceToPoint(p0)\n\n        if (d > delta) {\n          mark0 = 2\n          points2.push(p0.clone())\n        } else if (d < -delta) {\n          mark0 = 1\n          points1.push(p0.clone())\n        } else {\n          mark0 = 3\n          points1.push(p0.clone())\n          points2.push(p0.clone())\n        }\n\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\n        var mark1 = 0\n\n        var d = localPlane.distanceToPoint(p1)\n\n        if (d > delta) {\n          mark1 = 2\n          points2.push(p1.clone())\n        } else if (d < -delta) {\n          mark1 = 1\n          points1.push(p1.clone())\n        } else {\n          mark1 = 3\n          points1.push(p1.clone())\n          points2.push(p1.clone())\n        }\n\n        if ((mark0 === 1 && mark1 === 2) || (mark0 === 2 && mark1 === 1)) {\n          // Intersection of segment with the plane\n\n          this.tempLine1.start.copy(p0)\n          this.tempLine1.end.copy(p1)\n\n          var intersection = new Vector3()\n          intersection = localPlane.intersectLine(this.tempLine1, intersection)\n\n          if (intersection === undefined) {\n            // Shouldn't happen\n            console.error('Internal error: segment does not intersect plane.')\n            output.segmentedObject1 = null\n            output.segmentedObject2 = null\n            return 0\n          }\n\n          points1.push(intersection)\n          points2.push(intersection.clone())\n        }\n      }\n    }\n\n    // Calculate debris mass (very fast and imprecise):\n    var newMass = object.userData.mass * 0.5\n\n    // Calculate debris Center of Mass (again fast and imprecise)\n    this.tempCM1.set(0, 0, 0)\n    var radius1 = 0\n    var numPoints1 = points1.length\n\n    if (numPoints1 > 0) {\n      for (var i = 0; i < numPoints1; i++) this.tempCM1.add(points1[i])\n\n      this.tempCM1.divideScalar(numPoints1)\n      for (var i = 0; i < numPoints1; i++) {\n        var p = points1[i]\n        p.sub(this.tempCM1)\n        radius1 = Math.max(radius1, p.x, p.y, p.z)\n      }\n      this.tempCM1.add(object.position)\n    }\n\n    this.tempCM2.set(0, 0, 0)\n    var radius2 = 0\n    var numPoints2 = points2.length\n    if (numPoints2 > 0) {\n      for (var i = 0; i < numPoints2; i++) this.tempCM2.add(points2[i])\n\n      this.tempCM2.divideScalar(numPoints2)\n      for (var i = 0; i < numPoints2; i++) {\n        var p = points2[i]\n        p.sub(this.tempCM2)\n        radius2 = Math.max(radius2, p.x, p.y, p.z)\n      }\n      this.tempCM2.add(object.position)\n    }\n\n    var object1 = null\n    var object2 = null\n\n    var numObjects = 0\n\n    /**\n     * MOD: Wrapped in try catch block to avoid errors\n     */\n    if (numPoints1 > 4) {\n      try {\n        object1 = new Mesh(new ConvexBufferGeometry(points1), object.material)\n        object1.position.copy(this.tempCM1)\n        object1.quaternion.copy(object.quaternion)\n\n        this.prepareBreakableObject(\n          object1,\n          newMass,\n          object.userData.velocity,\n          object.userData.angularVelocity,\n          2 * radius1 > this.minSizeForBreak\n        )\n\n        numObjects++\n      } catch (error) {\n        logger('Error in ConvexObjectBreaker.ts')\n      }\n    }\n\n    if (numPoints2 > 4) {\n      try {\n        object2 = new Mesh(new ConvexBufferGeometry(points2), object.material)\n        object2.position.copy(this.tempCM2)\n        object2.quaternion.copy(object.quaternion)\n\n        this.prepareBreakableObject(\n          object2,\n          newMass,\n          object.userData.velocity,\n          object.userData.angularVelocity,\n          2 * radius2 > this.minSizeForBreak\n        )\n\n        numObjects++\n      } catch (error) {\n        logger('Error in ConvexObjectBreaker.ts')\n      }\n    }\n\n    output.object1 = object1\n    output.object2 = object2\n\n    return numObjects\n  }\n}\n\nConvexObjectBreaker.transformFreeVector = function(v: any, m: any) {\n  // input:\n  // vector interpreted as a free vector\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\n\n  var x = v.x,\n    y = v.y,\n    z = v.z\n  var e = m.elements\n\n  v.x = e[0] * x + e[4] * y + e[8] * z\n  v.y = e[1] * x + e[5] * y + e[9] * z\n  v.z = e[2] * x + e[6] * y + e[10] * z\n\n  return v\n}\n\nConvexObjectBreaker.transformFreeVectorInverse = function(v: any, m: any) {\n  // input:\n  // vector interpreted as a free vector\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\n\n  var x = v.x,\n    y = v.y,\n    z = v.z\n  var e = m.elements\n\n  v.x = e[0] * x + e[1] * y + e[2] * z\n  v.y = e[4] * x + e[5] * y + e[6] * z\n  v.z = e[8] * x + e[9] * y + e[10] * z\n\n  return v\n}\n\nConvexObjectBreaker.transformTiedVectorInverse = function(v: any, m: any) {\n  // input:\n  // vector interpreted as a tied (ordinary) vector\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\n\n  var x = v.x,\n    y = v.y,\n    z = v.z\n  var e = m.elements\n\n  v.x = e[0] * x + e[1] * y + e[2] * z - e[12]\n  v.y = e[4] * x + e[5] * y + e[6] * z - e[13]\n  v.z = e[8] * x + e[9] * y + e[10] * z - e[14]\n\n  return v\n}\n\nConvexObjectBreaker.transformPlaneToLocalSpace = (function() {\n  var v1 = new Vector3()\n\n  return function transformPlaneToLocalSpace(plane: any, m: any, resultPlane: any) {\n    resultPlane.normal.copy(plane.normal)\n    resultPlane.constant = plane.constant\n\n    var referencePoint = ConvexObjectBreaker.transformTiedVectorInverse(plane.coplanarPoint(v1), m)\n\n    ConvexObjectBreaker.transformFreeVectorInverse(resultPlane.normal, m)\n\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\n    resultPlane.constant = -referencePoint.dot(resultPlane.normal)\n  }\n})()\n\nexport { ConvexObjectBreaker }\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { AmmoPhysics } from '.'\nimport { ExtendedObject3D } from '@enable3d/common/src/types'\n\nimport EventEmitter from 'eventemitter3'\n\nclass PhysicsBody {\n  public offset = { x: 0, y: 0, z: 0 }\n  public name: string\n  public errors: string[] = []\n  public checkCollisions = false\n  public breakable = false\n  public collided = false\n  public didUpdate = false\n\n  private _emitUpdateEvents = false\n  private _needUpdate = false\n  private tmpBtVector3 = new Ammo.btVector3()\n  private eventEmitter: EventEmitter\n\n  constructor(private physics: AmmoPhysics, public ammo: Ammo.btRigidBody) {\n    // @ts-ignore\n    this.name = ammo.name\n  }\n\n  private setupEventEmitter() {\n    if (typeof this.eventEmitter === 'undefined') this.eventEmitter = new EventEmitter()\n  }\n\n  public get needUpdate() {\n    return this._needUpdate\n  }\n  public set needUpdate(need: boolean) {\n    if (!need && this._needUpdate) this.didUpdate = true\n    this._needUpdate = need\n  }\n\n  private onUpdateEvent(updateCallback: Function, once: boolean = false) {\n    this.setupEventEmitter()\n    this._emitUpdateEvents = true\n    if (once)\n      this.eventEmitter.once('update', () => {\n        updateCallback()\n      })\n    else\n      this.eventEmitter.on('update', () => {\n        updateCallback()\n      })\n  }\n\n  public get on() {\n    return {\n      update: (updateCallback: Function) => this.onUpdateEvent(updateCallback),\n      collision: (collisionCallback: (otherObject: ExtendedObject3D, event: 'start' | 'collision' | 'end') => void) =>\n        this.onCollision(collisionCallback)\n    }\n  }\n\n  public get once() {\n    return {\n      update: (updateCallback: Function) => this.onUpdateEvent(updateCallback, true)\n    }\n  }\n\n  private onCollision(\n    collisionCallback: (otherObject: ExtendedObject3D, event: 'start' | 'collision' | 'end') => void\n  ) {\n    this.checkCollisions = true\n\n    this.physics.on('collision', (data: { bodies: ExtendedObject3D[]; event: 'start' | 'collision' | 'end' }) => {\n      const { bodies, event } = data\n      if (bodies[0].name === this.name) collisionCallback(bodies[1], event)\n      else if (bodies[1].name === this.name) collisionCallback(bodies[0], event)\n    })\n  }\n\n  // /** You have to call transform() before you can get or set the body's position or rotation. */\n  // public transform() {\n  //   const t = this.physics.tmpTrans\n  //   this.ammo.getMotionState().getWorldTransform(t)\n  // }\n\n  // /** You have to call refresh() after you set the position or rotation of the body.  */\n  // public refresh() {\n  //   const t = this.physics.tmpTrans\n  //   this.ammo.getMotionState().setWorldTransform(t)\n  // }\n\n  // /** Set the rotation in radians. */\n  // public setRotation(x: number, y: number, z: number) {\n  //   const e = this.tmpEuler.set(x, y, z)\n  //   const q = this.tmpQuaternion.set(0, 0, 0, 1)\n  //   q.setFromEuler(e)\n\n  //   this.tmpBtQuaternion.setValue(0, 0, 0, 1)\n  //   const ammoQuat = this.tmpBtQuaternion\n  //   ammoQuat.setValue(q.x, q.y, q.z, q.w)\n\n  //   const t = this.physics.tmpTrans\n  //   t.setRotation(ammoQuat)\n  // }\n\n  // /** Get the rotation in radians. */\n  // public getRotation() {\n  //   const t = this.physics.tmpTrans\n  //   const ammoQuat = t.getRotation()\n  //   const q = this.tmpQuaternion.set(ammoQuat.x(), ammoQuat.y(), ammoQuat.z(), ammoQuat.w())\n\n  //   const qx = q.x\n  //   const qy = q.y\n  //   const qz = q.z\n  //   const qw = q.w\n\n  //   // https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n  //   const angle = 2 * Math.acos(qw)\n  //   const x = qx / Math.sqrt(1 - qw * qw)\n  //   const y = qy / Math.sqrt(1 - qw * qw)\n  //   const z = qz / Math.sqrt(1 - qw * qw)\n\n  //   return { x: x * angle || 0, y: y * angle || 0, z: z * angle || 0 }\n  // }\n\n  // public setPosition(x: number, y: number, z: number) {\n  //   const t = this.physics.tmpTrans\n  //   t.getOrigin().setValue(x, y, z)\n  // }\n\n  // public getPosition() {\n  //   const t = this.physics.tmpTrans\n  //   return { x: t.getOrigin().x(), y: t.getOrigin().y(), z: t.getOrigin().z() }\n  // }\n\n  public get velocity() {\n    return {\n      x: this.ammo.getLinearVelocity().x(),\n      y: this.ammo.getLinearVelocity().y(),\n      z: this.ammo.getLinearVelocity().z()\n    }\n  }\n\n  public get angularVelocity() {\n    return {\n      x: this.ammo.getAngularVelocity().x(),\n      y: this.ammo.getAngularVelocity().y(),\n      z: this.ammo.getAngularVelocity().z()\n    }\n  }\n\n  public setVelocity(x: number, y: number, z: number) {\n    this.tmpBtVector3.setValue(x, y, z)\n    this.ammo.setLinearVelocity(this.tmpBtVector3)\n  }\n  public setVelocityX(value: number) {\n    this.tmpBtVector3.setValue(value, this.velocity.y, this.velocity.z)\n    this.ammo.setLinearVelocity(this.tmpBtVector3)\n  }\n  public setVelocityY(value: number) {\n    this.tmpBtVector3.setValue(this.velocity.x, value, this.velocity.z)\n    this.ammo.setLinearVelocity(this.tmpBtVector3)\n  }\n  public setVelocityZ(value: number) {\n    this.tmpBtVector3.setValue(this.velocity.x, this.velocity.y, value)\n    this.ammo.setLinearVelocity(this.tmpBtVector3)\n  }\n\n  public setAngularVelocity(x: number, y: number, z: number) {\n    this.tmpBtVector3.setValue(x, y, z)\n    this.ammo.setAngularVelocity(this.tmpBtVector3)\n  }\n  public setAngularVelocityX(value: number) {\n    this.tmpBtVector3.setValue(value, this.angularVelocity.y, this.angularVelocity.z)\n    this.ammo.setAngularVelocity(this.tmpBtVector3)\n  }\n  public setAngularVelocityY(value: number) {\n    this.tmpBtVector3.setValue(this.angularVelocity.x, value, this.angularVelocity.z)\n    this.ammo.setAngularVelocity(this.tmpBtVector3)\n  }\n  public setAngularVelocityZ(value: number) {\n    this.tmpBtVector3.setValue(this.angularVelocity.x, this.angularVelocity.y, value)\n    this.ammo.setAngularVelocity(this.tmpBtVector3)\n  }\n\n  public applyForce(x: number, y: number, z: number) {\n    this.tmpBtVector3.setValue(x, y, z)\n    this.ammo.applyCentralImpulse(this.tmpBtVector3)\n  }\n  public applyForceX(value: number) {\n    this.tmpBtVector3.setValue(value, 0, 0)\n    this.ammo.applyCentralImpulse(this.tmpBtVector3)\n  }\n  public applyForceY(value: number) {\n    this.tmpBtVector3.setValue(0, value, 0)\n    this.ammo.applyCentralImpulse(this.tmpBtVector3)\n  }\n  public applyForceZ(value: number) {\n    this.tmpBtVector3.setValue(0, 0, value)\n    this.ammo.applyCentralImpulse(this.tmpBtVector3)\n  }\n\n  /**\n   * Add the collision flags\n   * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\n   */\n  // https://github.com/bulletphysics/bullet3/blob/aae8048722f2596f7e2bdd52d2a1dcb52a218f2b/src/BulletCollision/CollisionDispatch/btCollisionObject.h#L128\n  public setCollisionFlags(value: number) {\n    this.ammo.setCollisionFlags(value)\n  }\n  /**\n   * Get the collision flags\n   * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\n   */\n  public getCollisionFlags() {\n    return this.ammo.getCollisionFlags()\n  }\n\n  /**\n   * Set the restitution (same as bounciness)\n   * @param value A number from 0 to 1.\n   */\n  public setRestitution(value: number) {\n    this.ammo.setRestitution(value)\n  }\n  /**\n   * Set the bounciness (same as restitution)\n   * @param value A number from 0 to 1.\n   */\n  public setBounciness(value: number) {\n    this.setRestitution(value)\n  }\n\n  public setLinearFactor(x: number, y: number, z: number) {\n    this.tmpBtVector3.setValue(x, y, z)\n    this.ammo.setLinearFactor(this.tmpBtVector3)\n  }\n  public setAngularFactor(x: number, y: number, z: number) {\n    this.tmpBtVector3.setValue(x, y, z)\n    this.ammo.setAngularFactor(this.tmpBtVector3)\n  }\n\n  public setFriction(value: number) {\n    this.ammo.setFriction(value)\n  }\n}\n\nexport default PhysicsBody\n","// https://www.typescriptlang.org/docs/handbook/mixins.html\nconst applyMixins = (derivedCtor: any, baseCtors: any[]) => {\n  baseCtors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n      // @ts-ignore\n      Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name))\n    })\n  })\n}\n\nexport default applyMixins\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport {\n  SphereConfig,\n  MaterialConfig,\n  BoxConfig,\n  GroundConfig,\n  CylinderConfig,\n  ExtendedObject3D,\n  ExtrudeConfig,\n  TorusConfig,\n  AddExistingConfig\n} from '@enable3d/common/src/types'\nimport Factories from '@enable3d/common/src/factories'\n\ninterface Shapes {}\n\nclass Shapes {\n  public tmpTrans: Ammo.btTransform\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\n  protected objectsAmmo: { [ptr: number]: any } = {}\n  protected addExisting: (object: ExtendedObject3D, config?: AddExistingConfig) => void\n  protected factory: Factories\n\n  protected addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) {\n    const sphere = this.factory.add.sphere(sphereConfig, materialConfig)\n    this.addExisting(sphere, sphereConfig)\n    return sphere\n  }\n\n  protected addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) {\n    const box = this.factory.add.box(boxConfig, materialConfig)\n    this.addExisting(box, boxConfig)\n    return box\n  }\n\n  protected addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) {\n    const ground = this.factory.add.ground(groundConfig, materialConfig)\n    const config = { ...groundConfig, mass: 0, collisionFlags: 1 }\n    this.addExisting(ground, config)\n    return ground\n  }\n\n  protected addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) {\n    const cylinder = this.factory.add.cylinder(cylinderConfig, materialConfig)\n    this.addExisting(cylinder, cylinderConfig)\n    return cylinder\n  }\n\n  protected addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) {\n    const torus = this.factory.add.torus(torusConfig, materialConfig)\n    this.addExisting(torus, torusConfig)\n    return torus\n  }\n\n  protected addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) {\n    const object = this.factory.add.extrude(extrudeConfig, materialConfig)\n    object.translateX(1)\n    this.addExisting(object)\n    return object\n  }\n}\n\nexport default Shapes\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\n// Inspired by https://github.com/donmccurdy/aframe-physics-system/blob/master/src/components/ammo-constraint.js\n\nimport PhysicsBody from './physicsBody'\nimport { XYZ } from '@enable3d/common/src/types'\n\nexport default class Constraints {\n  public tmpTrans: Ammo.btTransform\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\n\n  constructor() {}\n  protected get addConstraints() {\n    return {\n      lock: (body: PhysicsBody, targetBody: PhysicsBody) => this.lock(body, targetBody),\n      fixed: (body: PhysicsBody, targetBody: PhysicsBody) => this.fixed(body, targetBody),\n      spring: (\n        body: PhysicsBody,\n        targetBody: PhysicsBody,\n        config: {\n          stiffness?: number\n          damping?: number\n          angularLock?: boolean\n        }\n      ) => this.spring(body, targetBody, config),\n      slider: (body: PhysicsBody, targetBody: PhysicsBody) => this.slider(body, targetBody),\n      hinge: (\n        body: PhysicsBody,\n        targetBody: PhysicsBody,\n        config: {\n          pivot?: XYZ\n          targetPivot?: XYZ\n          axis?: XYZ\n          targetAxis?: XYZ\n        }\n      ) => this.hinge(body, targetBody, config),\n      coneTwist: (body: PhysicsBody, targetPivot: XYZ) => this.coneTwist(body, targetPivot),\n      pointToPoint: (\n        body: PhysicsBody,\n        targetBody: PhysicsBody,\n        config: {\n          pivot?: XYZ\n          targetPivot?: XYZ\n        }\n      ) => this.pointToPoint(body, targetBody, config)\n    }\n  }\n\n  private getTransform(body: Ammo.btRigidBody, targetBody: Ammo.btRigidBody) {\n    const bodyTransform = body\n      .getCenterOfMassTransform()\n      .inverse()\n      .op_mul(targetBody.getWorldTransform())\n    const targetTransform = new Ammo.btTransform()\n    targetTransform.setIdentity()\n    return { body: bodyTransform, target: targetTransform }\n  }\n\n  private lock(body: PhysicsBody, targetBody: PhysicsBody) {\n    const transform = this.getTransform(body.ammo, targetBody.ammo)\n    const constraint = new Ammo.btGeneric6DofConstraint(\n      body.ammo,\n      targetBody.ammo,\n      transform.body,\n      transform.target,\n      true\n    )\n    const zero = new Ammo.btVector3(0, 0, 0)\n    //TODO: allow these to be configurable\n    constraint.setLinearLowerLimit(zero)\n    constraint.setLinearUpperLimit(zero)\n    constraint.setAngularLowerLimit(zero)\n    constraint.setAngularUpperLimit(zero)\n    this.physicsWorld.addConstraint(constraint)\n  }\n\n  private fixed(body: PhysicsBody, targetBody: PhysicsBody) {\n    const transform = this.getTransform(body.ammo, targetBody.ammo)\n    transform.body.setRotation(body.ammo.getWorldTransform().getRotation())\n    transform.target.setRotation(targetBody.ammo.getWorldTransform().getRotation())\n    const constraint = new Ammo.btFixedConstraint(body.ammo, targetBody.ammo, transform.body, transform.target)\n    this.physicsWorld.addConstraint(constraint)\n  }\n\n  private spring(\n    body: PhysicsBody,\n    targetBody: PhysicsBody,\n    config: {\n      stiffness?: number\n      damping?: number\n      angularLock?: boolean\n    } = {}\n  ) {\n    const { stiffness = 50, damping = 0.01, angularLock = false } = config\n\n    const transform = this.getTransform(body.ammo, targetBody.ammo)\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(\n      body.ammo,\n      targetBody.ammo,\n      transform.body,\n      transform.target,\n      true\n    )\n\n    constraint.setLinearLowerLimit(new Ammo.btVector3(-100, -100, -100))\n    constraint.setLinearUpperLimit(new Ammo.btVector3(100, 100, 100))\n\n    if (angularLock) {\n      constraint.setAngularLowerLimit(new Ammo.btVector3(0, 0, 0))\n      constraint.setAngularUpperLimit(new Ammo.btVector3(0, 0, 0))\n    }\n\n    for (let i = 0; i < 3; i++) {\n      constraint.enableSpring(i, true)\n      constraint.setStiffness(i, stiffness)\n      constraint.setDamping(i, damping)\n    }\n    // I have no idea what setEquilibriumPoint does :/\n    // constraint.setEquilibriumPoint()\n    this.physicsWorld.addConstraint(constraint)\n  }\n\n  private slider(body: PhysicsBody, targetBody: PhysicsBody) {\n    const transform = this.getTransform(body.ammo, targetBody.ammo)\n    //TODO: support setting linear and angular limits\n    const constraint = new Ammo.btSliderConstraint(body.ammo, targetBody.ammo, transform.body, transform.target, true)\n    constraint.setLowerLinLimit(-1)\n    constraint.setUpperLinLimit(1)\n    // constraint.setLowerAngLimit();\n    // constraint.setUpperAngLimit();\n    this.physicsWorld.addConstraint(constraint)\n  }\n\n  private hinge(\n    body: PhysicsBody,\n    targetBody: PhysicsBody,\n    config: {\n      pivot?: XYZ\n      targetPivot?: XYZ\n      axis?: XYZ\n      targetAxis?: XYZ\n    } = {}\n  ) {\n    const { pivot, targetPivot, axis, targetAxis } = config\n    const pivotV3 = new Ammo.btVector3(pivot?.x || 0, pivot?.y || 0, pivot?.z || 0)\n    const targetPivotV3 = new Ammo.btVector3(targetPivot?.x || 0, targetPivot?.y || 0, targetPivot?.z || 0)\n    const axisV3 = new Ammo.btVector3(axis?.x || 0, axis?.y || 0, axis?.z || 1)\n    const targetAxisV3 = new Ammo.btVector3(targetAxis?.x || 0, targetAxis?.y || 0, targetAxis?.z || 1)\n    const constraint = new Ammo.btHingeConstraint(\n      body.ammo,\n      targetBody.ammo,\n      pivotV3,\n      targetPivotV3,\n      axisV3,\n      targetAxisV3,\n      true\n    )\n    this.physicsWorld.addConstraint(constraint)\n  }\n\n  private coneTwist(body: PhysicsBody, targetPivot: XYZ = {}) {\n    const pivotTransform = new Ammo.btTransform()\n    pivotTransform.setIdentity()\n    pivotTransform.getOrigin().setValue(targetPivot?.x || 0, targetPivot?.y || 0, targetPivot?.z || 0)\n    const constraint = new Ammo.btConeTwistConstraint(body.ammo, pivotTransform)\n    this.physicsWorld.addConstraint(constraint)\n  }\n\n  private pointToPoint(\n    body: PhysicsBody,\n    targetBody: PhysicsBody,\n    config: {\n      pivot?: XYZ\n      targetPivot?: XYZ\n    } = {}\n  ) {\n    const { pivot, targetPivot } = config\n    const pivotV3 = new Ammo.btVector3(pivot?.x || 0, pivot?.y || 0, pivot?.z || 0)\n    const targetPivotV3 = new Ammo.btVector3(targetPivot?.x || 0, targetPivot?.y || 0, targetPivot?.z || 0)\n    const constraint = new Ammo.btPoint2PointConstraint(body.ammo, targetBody.ammo, pivotV3, targetPivotV3)\n    this.physicsWorld.addConstraint(constraint)\n  }\n}\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport EventEmitter from 'eventemitter3'\nimport { ExtendedObject3D } from '@enable3d/common/src/types'\n\nexport default class Events extends EventEmitter {\n  public tmpTrans: Ammo.btTransform\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\n\n  protected addCollider(\n    object1: ExtendedObject3D,\n    object2: ExtendedObject3D,\n    eventCallback: (event: 'start' | 'collision' | 'end') => void\n  ) {\n    if (!object1.body || !object2.body) return\n\n    object1.body.checkCollisions = true\n    object2.body.checkCollisions = true\n\n    this.on('collision', data => {\n      const { bodies, event } = data\n      if (bodies[0]?.name && bodies[1]?.name && object1?.name && object2?.name) {\n        if (bodies[0].name === object1.name && bodies[1].name === object2.name) eventCallback(event)\n        else if (bodies[1].name === object1.name && bodies[0].name === object2.name) eventCallback(event)\n      }\n    })\n  }\n}\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @description  This is a modified version of the original code from Kevin Lee\n */\n\n/**\n * @author       Kevin Lee (https://github.com/InfiniteLee)\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/ammo-debug-drawer\n * @license      {@link https://github.com/InfiniteLee/ammo-debug-drawer/blob/master/LICENSE|MPL-2.0}\n */\n\nimport {\n  Scene,\n  BufferGeometry,\n  BufferAttribute,\n  LineBasicMaterial,\n  VertexColors,\n  LineSegments,\n  StaticDrawUsage\n} from '@enable3d/three-wrapper/src/index'\n\nconst AmmoDebugConstants = {\n  NoDebug: 0,\n  DrawWireframe: 1,\n  DrawAabb: 2,\n  DrawFeaturesText: 4,\n  DrawContactPoints: 8,\n  NoDeactivation: 16,\n  NoHelpText: 32,\n  DrawText: 64,\n  ProfileTimings: 128,\n  EnableSatComparison: 256,\n  DisableBulletLCP: 512,\n  EnableCCD: 1024,\n  DrawConstraints: 1 << 11, //2048\n  DrawConstraintLimits: 1 << 12, //4096\n  FastWireframe: 1 << 13, //8192\n  DrawNormals: 1 << 14, //16384\n  DrawOnTop: 1 << 15, //32768\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\n}\n\n/**\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\n */\nclass DebugDrawer {\n  debugDrawMode: number\n  geometry: BufferGeometry\n  index: number\n  mesh: LineSegments\n  enabled: boolean\n  debugDrawer: Ammo.DebugDrawer\n  warnedOnce: boolean\n  constructor(public scene: Scene, public world: Ammo.btCollisionWorld, public options: any = {}) {\n    this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe\n    const drawOnTop = this.debugDrawMode & AmmoDebugConstants.DrawOnTop || false\n    const maxBufferSize = options.maxBufferSize || 1000000\n\n    this.geometry = new BufferGeometry()\n    const vertices = new Float32Array(maxBufferSize * 3)\n    const colors = new Float32Array(maxBufferSize * 3)\n\n    /*\n    I do not know the difference, just using the first one.\n    export const StaticDrawUsage: Usage;\n    export const DynamicDrawUsage: Usage;\n    export const StreamDrawUsage: Usage;\n    export const StaticReadUsage: Usage;\n    export const DynamicReadUsage: Usage;\n    export const StreamReadUsage: Usage;\n    export const StaticCopyUsage: Usage;\n    export const DynamicCopyUsage: Usage;\n    export const StreamCopyUsage: Usage;\n     */\n    this.geometry.setAttribute('position', new BufferAttribute(vertices, 3).setUsage(StaticDrawUsage))\n    this.geometry.setAttribute('color', new BufferAttribute(colors, 3).setUsage(StaticDrawUsage))\n\n    this.index = 0\n\n    const material = new LineBasicMaterial({\n      vertexColors: VertexColors,\n      depthTest: !drawOnTop\n    })\n\n    this.mesh = new LineSegments(this.geometry, material)\n    if (drawOnTop) this.mesh.renderOrder = 999\n    this.mesh.frustumCulled = false\n\n    this.enabled = false\n\n    this.debugDrawer = new Ammo.DebugDrawer()\n    this.debugDrawer.drawLine = this.drawLine.bind(this)\n    this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this)\n    this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this)\n    this.debugDrawer.draw3dText = this.draw3dText.bind(this)\n    this.debugDrawer.setDebugMode = this.setDebugMode.bind(this)\n    this.debugDrawer.getDebugMode = this.getDebugMode.bind(this)\n\n    this.world.setDebugDrawer(this.debugDrawer)\n  }\n\n  enable() {\n    this.enabled = true\n    this.scene.add(this.mesh)\n  }\n\n  disable() {\n    this.enabled = false\n    this.scene.remove(this.mesh)\n  }\n\n  update() {\n    if (!this.enabled) {\n      return\n    }\n\n    if (this.index != 0) {\n      // @ts-ignore\n      this.geometry.attributes.position.needsUpdate = true\n      // @ts-ignore\n      this.geometry.attributes.color.needsUpdate = true\n    }\n\n    this.index = 0\n    this.world.debugDrawWorld()\n    this.geometry.setDrawRange(0, this.index)\n  }\n\n  drawLine(from: any, to: any, color: any) {\n    // @ts-ignore\n    const heap = Ammo.HEAPF32\n    const r = heap[(color + 0) / 4]\n    const g = heap[(color + 4) / 4]\n    const b = heap[(color + 8) / 4]\n\n    const fromX = heap[(from + 0) / 4]\n    const fromY = heap[(from + 4) / 4]\n    const fromZ = heap[(from + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, fromX, fromY, fromZ)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n\n    const toX = heap[(to + 0) / 4]\n    const toY = heap[(to + 4) / 4]\n    const toZ = heap[(to + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, toX, toY, toZ)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n  }\n\n  //TODO: figure out how to make lifeTime work\n  drawContactPoint(pointOnB: any, normalOnB: any, distance: any, _lifeTime: any, color: any) {\n    // @ts-ignore\n    const heap = Ammo.HEAPF32\n    const r = heap[(color + 0) / 4]\n    const g = heap[(color + 4) / 4]\n    const b = heap[(color + 8) / 4]\n\n    const x = heap[(pointOnB + 0) / 4]\n    const y = heap[(pointOnB + 4) / 4]\n    const z = heap[(pointOnB + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, x, y, z)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n\n    const dx = heap[(normalOnB + 0) / 4] * distance\n    const dy = heap[(normalOnB + 4) / 4] * distance\n    const dz = heap[(normalOnB + 8) / 4] * distance\n    this.geometry.attributes.position.setXYZ(this.index, x + dx, y + dy, z + dz)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n  }\n\n  reportErrorWarning(warningString: string) {\n    if (Ammo.hasOwnProperty('Pointer_stringify')) {\n      // @ts-ignore\n      console.warn(Ammo.Pointer_stringify(warningString))\n    } else if (!this.warnedOnce) {\n      this.warnedOnce = true\n      console.warn(\"Cannot print warningString, please rebuild Ammo.js using 'debug' flag\")\n    }\n  }\n\n  draw3dText(_location: any, _textString: any) {\n    //TODO\n    console.warn('TODO: draw3dText')\n  }\n\n  setDebugMode(debugMode: any) {\n    this.debugDrawMode = debugMode\n  }\n\n  getDebugMode() {\n    return this.debugDrawMode\n  }\n}\n\nexport default DebugDrawer\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport DebugDrawer from './debugDrawer'\nimport EventEmitter from 'eventemitter3'\nimport { ExtendedObject3D, Phaser3DConfig } from '@enable3d/common/src/types'\nimport { Vector3, Scene, Quaternion, Euler } from '@enable3d/three-wrapper/src/index'\nimport { ConvexObjectBreaker } from './convexObjectBreaker'\nimport DefaultMaterial from '@enable3d/common/src/defaultMaterial'\n\nclass Physics extends EventEmitter {\n  public tmpTrans: Ammo.btTransform\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\n  protected dispatcher: Ammo.btCollisionDispatcher\n  protected rigidBodies: ExtendedObject3D[] = []\n  protected objectsAmmo: { [ptr: number]: any } = {}\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\n  protected debugDrawer: DebugDrawer\n  private convexBreaker: any\n  protected addRigidBody: (threeObject: ExtendedObject3D, physicsShape: any, mass: any, pos: any, quat: any) => void\n  private objectsToRemove: any[]\n  private numObjectsToRemove: number\n  protected gravity: { x: number; y: number; z: number }\n\n  protected emptyV3: Vector3\n  protected impactPoint: Vector3\n  protected impactNormal: Vector3\n\n  protected tmpEuler: Euler\n  protected tmpQuaternion: Quaternion\n  protected tmpVector3: Vector3\n  protected tmpBtVector3: Ammo.btVector3\n  protected tmpBtQuaternion: Ammo.btQuaternion\n\n  protected defaultMaterial: DefaultMaterial\n\n  constructor(protected scene: Scene, public config: Phaser3DConfig = {}) {\n    super()\n  }\n\n  protected setup() {\n    // Initialize convexBreaker\n    // @ts-ignore\n    this.convexBreaker = new ConvexObjectBreaker()\n\n    this.objectsToRemove = []\n    this.numObjectsToRemove = 0\n    for (var i = 0; i < 500; i++) {\n      this.objectsToRemove[i] = null\n    }\n\n    // setup ammo physics\n    this.setupPhysicsWorld()\n\n    this.debugDrawer = new DebugDrawer(this.scene, this.physicsWorld, {})\n\n    /**\n     * TODO add ghost object\n     */\n    // const ghost = new Ammo.btGhostObject()\n    // ghost.setCollisionShape(new Ammo.btSphereShape(10))\n    // ghost.setWorldTransform(new Ammo.btTransform(new Ammo.btQuaternion(0, 0, 0, 1), new Ammo.btVector3(0, 15, 0)))\n    // ghost.setCollisionFlags(4)\n    // this.physicsWorld.addCollisionObject(ghost)\n\n    // run the phaser update method\n    /*if (!this.phaser3D.isXrEnabled)\n      this.scene.events.on('update', (_time: number, delta: number) => {\n        this.update(delta)\n        this.updateDebugger()\n      })*/\n  }\n\n  public updateDebugger() {\n    if (this.debugDrawer && this.debugDrawer.enabled) this.debugDrawer.update()\n  }\n\n  protected setupPhysicsWorld() {\n    const g = this.gravity\n\n    const collisionConfiguration = new Ammo.btDefaultCollisionConfiguration()\n    const dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration)\n    const broadphase = new Ammo.btDbvtBroadphase()\n    const solver = new Ammo.btSequentialImpulseConstraintSolver()\n    this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration)\n    this.physicsWorld.setGravity(new Ammo.btVector3(g.x, g.y, g.z))\n\n    this.dispatcher = dispatcher\n    this.tmpTrans = new Ammo.btTransform()\n  }\n\n  private createDebrisFromBreakableObject(object: ExtendedObject3D, parent: ExtendedObject3D) {\n    object.material = this.defaultMaterial.get()\n    object.shape = 'hull'\n    object.fragmentDepth = parent.fragmentDepth + 1\n\n    // Add the object to the scene\n    this.scene.add(object)\n\n    // Add physics to the object\n    // @ts-ignore\n    this.addExisting(object)\n\n    object.body.breakable = false\n    // make this fragment breakable in 2.5seconds\n    setTimeout(() => {\n      object.body.breakable = true\n    }, 2500)\n  }\n\n  private removeDebris(object: any) {\n    this.scene.remove(object)\n    this.physicsWorld.removeRigidBody(object.body.ammo)\n    delete this.objectsAmmo[object.ptr]\n  }\n\n  public update(delta: number) {\n    // reset these vectors\n    this.impactPoint.set(0, 0, 0)\n    this.impactNormal.set(0, 0, 0)\n\n    const detectedCollisions: { combinedName: string; collision: boolean }[] = []\n\n    // Step world\n    const deltaTime = delta / 1000\n    this.physicsWorld.stepSimulation(deltaTime, this.config.maxSubSteps || 1, this.config.fixedTimeStep || 1 / 60)\n\n    /**\n     * Update rigid bodies\n     */\n    for (var i = 0, il = this.rigidBodies.length; i < il; i++) {\n      var objThree = this.rigidBodies[i]\n      var objPhys = objThree.body.ammo\n      var ms = objPhys.getMotionState()\n\n      if (ms) {\n        ms.getWorldTransform(this.tmpTrans)\n\n        // check if object did an update since last call\n        if (objThree.body.didUpdate) {\n          // @ts-ignore\n          if (objThree.body._emitUpdateEvents) objThree.body.eventEmitter.emit('update')\n          objThree.body.didUpdate = false\n        }\n\n        // update positions\n        if (objThree.body.ammo.isKinematicObject() && objThree.body.needUpdate) {\n          // get position and rotation\n          objThree.getWorldQuaternion(this.tmpQuaternion)\n          objThree.getWorldPosition(this.tmpVector3)\n          // adjust tmp variables\n          this.tmpBtVector3.setValue(this.tmpVector3.x, this.tmpVector3.y, this.tmpVector3.z)\n          this.tmpBtQuaternion.setValue(\n            this.tmpQuaternion.x,\n            this.tmpQuaternion.y,\n            this.tmpQuaternion.z,\n            this.tmpQuaternion.w\n          )\n          // set position and rotation\n          this.tmpTrans.setOrigin(this.tmpBtVector3)\n          this.tmpTrans.setRotation(this.tmpBtQuaternion)\n          // set transform\n          ms.setWorldTransform(this.tmpTrans)\n          // reset needsUpdate\n          objThree.body.needUpdate = false\n        } else {\n          // get position and rotation\n          let p = this.tmpTrans.getOrigin()\n          let q = this.tmpTrans.getRotation()\n          // body offset\n          let o = objThree.body.offset\n          // set position and rotation\n          objThree.position.set(p.x() + o.x, p.y() + o.y, p.z() + o.z)\n          objThree.quaternion.set(q.x(), q.y(), q.z(), q.w())\n        }\n\n        objThree.body.collided = false\n      }\n    }\n\n    /**\n     * Check collisions\n     */\n    for (var i = 0, il = this.dispatcher.getNumManifolds(); i < il; i++) {\n      const contactManifold = this.dispatcher.getManifoldByIndexInternal(i)\n      const key = Object.keys(contactManifold.getBody0())[0]\n\n      // @ts-ignore\n      const body0 = Ammo.castObject(contactManifold.getBody0(), Ammo.btRigidBody)\n      // @ts-ignore\n      const body1 = Ammo.castObject(contactManifold.getBody1(), Ammo.btRigidBody)\n\n      // do not check collision between 2 unnamed objects\n      // (fragments do not have a name, for example)\n      if (body0.name === '' && body1.name === '') continue\n\n      // @ts-ignore\n      const ptr0 = body0[key]\n      // @ts-ignore\n      const ptr1 = body1[key]\n      const threeObject0 = this.objectsAmmo[ptr0] as ExtendedObject3D\n      const threeObject1 = this.objectsAmmo[ptr1] as ExtendedObject3D\n\n      if (!threeObject0 || !threeObject1) {\n        continue\n      }\n\n      /**\n       * Get some information\n       */\n      const breakable0 = threeObject0.body.breakable\n      const breakable1 = threeObject1.body.breakable\n\n      const collided0 = threeObject0.body.collided\n      const collided1 = threeObject1.body.collided\n\n      const checkCollisions0 = threeObject0.body?.checkCollisions\n      const checkCollisions1 = threeObject1.body?.checkCollisions\n\n      /**\n       * Handle collision events\n       */\n      if (checkCollisions0 || checkCollisions1) {\n        // check if a collision between these object has already been processed\n        const names = [threeObject0.name, threeObject1.name].sort()\n        const combinedName = `${names[0]}__${names[1]}`\n        let event\n        if (this.earlierDetectedCollisions.find(el => el.combinedName === combinedName)) event = 'colliding'\n        else event = 'start'\n        detectedCollisions.push({ combinedName, collision: true })\n        this.emit('collision', { bodies: [threeObject0, threeObject1], event })\n      }\n\n      if ((!breakable0 && !breakable1) || (collided0 && collided1)) {\n        continue\n      }\n\n      let contact = false\n      let maxImpulse = 0\n      for (var j = 0, jl = contactManifold.getNumContacts(); j < jl; j++) {\n        var contactPoint = contactManifold.getContactPoint(j)\n\n        if (contactPoint.getDistance() < 0) {\n          contact = true\n          var impulse = contactPoint.getAppliedImpulse()\n\n          if (impulse > maxImpulse) {\n            maxImpulse = impulse\n            var pos = contactPoint.get_m_positionWorldOnB()\n            var normal = contactPoint.get_m_normalWorldOnB()\n            this.impactPoint.set(pos.x(), pos.y(), pos.z())\n            this.impactNormal.set(normal.x(), normal.y(), normal.z())\n          }\n\n          break\n        }\n      }\n\n      // If no point has contact, abort\n      if (!contact) continue\n\n      /**\n       * Check for breakable objects (subdivision)\n       */\n      const fractureImpulse = 5 //250\n      const MAX_FRAGMENT_DEPTH = 2\n\n      // since the library convexBreaker makes use of three's userData\n      // we have to clone the necessary params to threeObjectX.userData\n      // TODO improve this\n\n      this.emptyV3.set(0, 0, 0)\n      threeObject0.userData = {\n        mass: 1,\n        velocity: this.emptyV3,\n        angularVelocity: this.emptyV3,\n        breakable: breakable0,\n        physicsBody: body0\n      }\n      threeObject1.userData = {\n        mass: 1,\n        velocity: this.emptyV3,\n        angularVelocity: this.emptyV3,\n        breakable: breakable1,\n        physicsBody: body1\n      }\n      if (typeof threeObject0.fragmentDepth === 'undefined') threeObject0.fragmentDepth = 0\n      if (typeof threeObject1.fragmentDepth === 'undefined') threeObject1.fragmentDepth = 0\n\n      // threeObject0\n      if (breakable0 && !collided0 && maxImpulse > fractureImpulse && threeObject0.fragmentDepth < MAX_FRAGMENT_DEPTH) {\n        var debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\n\n        var numObjects = debris.length\n        for (var j = 0; j < numObjects; j++) {\n          var vel = body0.getLinearVelocity()\n          var angVel = body0.getAngularVelocity()\n          var fragment = debris[j] as ExtendedObject3D\n          fragment.userData.velocity.set(vel.x(), vel.y(), vel.z())\n          fragment.userData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\n\n          this.createDebrisFromBreakableObject(fragment, threeObject0)\n        }\n\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject0\n        threeObject0.body.collided = true\n      }\n\n      // threeObject1\n      if (breakable1 && !collided1 && maxImpulse > fractureImpulse && threeObject1.fragmentDepth < MAX_FRAGMENT_DEPTH) {\n        var debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\n\n        var numObjects = debris.length\n        for (var j = 0; j < numObjects; j++) {\n          var vel = body1.getLinearVelocity()\n          var angVel = body1.getAngularVelocity()\n          var fragment = debris[j] as ExtendedObject3D\n          fragment.userData.velocity.set(vel.x(), vel.y(), vel.z())\n          fragment.userData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\n\n          this.createDebrisFromBreakableObject(fragment, threeObject1)\n        }\n\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject1\n        threeObject1.body.collided = true\n      }\n    }\n\n    /**\n     * Remove objects\n     */\n    for (var i = 0; i < this.numObjectsToRemove; i++) {\n      this.removeDebris(this.objectsToRemove[i])\n    }\n    this.numObjectsToRemove = 0\n\n    /**\n     * Handle collision end events\n     */\n    this.earlierDetectedCollisions.forEach(el => {\n      const { combinedName } = el\n      if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\n        const split = combinedName.split('__')\n        const obj0 = this.rigidBodies.find(obj => obj.name === split[0])\n        const obj1 = this.rigidBodies.find(obj => obj.name === split[1])\n        if (obj0 && obj1) this.emit('collision', { bodies: [obj0, obj1], event: 'end' })\n      }\n    })\n    this.earlierDetectedCollisions = [...detectedCollisions]\n  }\n}\n\nexport default Physics\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { AnimationClip, AnimationMixer, Mesh, Line, Points, Object3D, Vector3 } from '@enable3d/three-wrapper/src/index'\n// Can I use circular dependencies if I only ise the typings?\nimport PhysicsBody from '@enable3d/ammo-physics/src/physicsBody'\nimport { AnimationAction } from '@enable3d/three-wrapper/src/index'\nimport logger from './logger'\n\ninterface ExtendedObject3D extends Line, Mesh, Points {\n  isLine: any\n  isPoints: any\n  isMesh: any\n  type: any\n}\n\n/**\n * Extends the Object3D class from THREE.js and implements properties from Line, Mesh and Points.\n */\nclass ExtendedObject3D extends Object3D {\n  private vector3 = new Vector3()\n  public shape: string\n  public name: string\n  public body: PhysicsBody\n  public hasBody: boolean = false\n  public animations?: AnimationClip[]\n  public mixer?: AnimationMixer\n  public anims: { [key: string]: AnimationClip } = {}\n  public action: AnimationAction\n  public currentAnimation: string = ''\n  public fragmentDepth: number\n\n  constructor() {\n    super()\n    this.name = `object-${this.id}`\n  }\n\n  /** Returns all values relative to the world. */\n  get world() {\n    return {\n      theta: this.worldTheta,\n      phi: this.worldPhi\n    }\n  }\n\n  /** Get the theta relative to the world. */\n  private get worldTheta() {\n    this.getWorldDirection(this.vector3)\n    return Math.atan2(this.vector3.x, this.vector3.z)\n  }\n\n  /** Get the phi relative to the world. */\n  private get worldPhi() {\n    this.getWorldDirection(this.vector3)\n    return Math.acos(this.vector3.y)\n  }\n\n  public setAction(name: string) {\n    if (this.mixer && this.anims.hasOwnProperty(name)) {\n      const action = this.mixer?.clipAction(this.anims[name])\n      action.time = 0\n      this.mixer.stopAllAction()\n      action.fadeIn(0.5)\n      action.play()\n      this.currentAnimation = name\n    } else {\n      logger(`[Phaser3D] Can't set animation ${name}`)\n    }\n  }\n}\n\nexport default ExtendedObject3D\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @description  This is a modified version of the original code from Kevin Lee\n */\n\n/**\n * @author       Kevin Lee (https://github.com/InfiniteLee)\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/three-to-ammo\n * @license      {@link https://github.com/InfiniteLee/three-to-ammo/blob/master/LICENSE|MPL-2.0}\n */\n\n'use strict'\n/* global Ammo */\n\nconst TYPE = {\n  BOX: 'box',\n  CYLINDER: 'cylinder',\n  SPHERE: 'sphere',\n  CAPSULE: 'capsule',\n  CONE: 'cone',\n  HULL: 'hull',\n  HACD: 'hacd', //Hierarchical Approximate Convex Decomposition\n  VHACD: 'vhacd', //Volumetric Hierarchical Approximate Convex Decomposition\n  MESH: 'mesh',\n  HEIGHTFIELD: 'heightfield'\n}\n\nconst FIT = {\n  ALL: 'all', //A single shape is automatically sized to bound all meshes within the entity.\n  MANUAL: 'manual' //A single shape is sized manually. Requires halfExtents or sphereRadius.\n}\n\nconst HEIGHTFIELD_DATA_TYPE = {\n  short: 'short',\n  float: 'float'\n}\n\nimport ExtendedObject3d from '@enable3d/common/src/extendedObject3D'\nimport { Vector3, Matrix4, BufferGeometry, Quaternion, Box3 } from '@enable3d/three-wrapper/src/index'\nimport logger from '@enable3d/common/src/logger'\n\nconst hasUpdateMatricesFunction = ExtendedObject3d.prototype.hasOwnProperty('updateMatrices')\n\nexport const createCollisionShapes = function(root, options) {\n  switch (options.type) {\n    case TYPE.BOX:\n      return createBoxShape(root, options)\n    case TYPE.CYLINDER:\n      return createCylinderShape(root, options)\n    case TYPE.CAPSULE:\n      return createCapsuleShape(root, options)\n    case TYPE.CONE:\n      return createConeShape(root, options)\n    case TYPE.SPHERE:\n      return createSphereShape(root, options)\n    case TYPE.HULL:\n      return createHullShape(root, options)\n    case TYPE.HACD:\n      return createHACDShapes(root, options)\n    case TYPE.VHACD:\n      return createVHACDShapes(root, options)\n    case TYPE.MESH:\n      return createTriMeshShape(root, options)\n    case TYPE.HEIGHTFIELD:\n      return createHeightfieldTerrainShape(root, options)\n    default:\n      logger(options.type + ' is not currently supported')\n      return []\n  }\n}\n\n//TODO: support gimpact (dynamic trimesh) and heightmap\n\nexport const createBoxShape = function(root, options) {\n  options.type = TYPE.BOX\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents)\n  Ammo.destroy(btHalfExtents)\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options))\n  return collisionShape\n}\n\nexport const createCylinderShape = function(root, options) {\n  options.type = TYPE.CYLINDER\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case 'y':\n        return new Ammo.btCylinderShape(btHalfExtents)\n      case 'x':\n        return new Ammo.btCylinderShapeX(btHalfExtents)\n      case 'z':\n        return new Ammo.btCylinderShapeZ(btHalfExtents)\n    }\n    return null\n  })()\n  Ammo.destroy(btHalfExtents)\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options))\n  return collisionShape\n}\n\nexport const createCapsuleShape = function(root, options) {\n  options.type = TYPE.CAPSULE\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const { x, y, z } = options.halfExtents\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case 'y':\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2)\n      case 'x':\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2)\n      case 'z':\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2)\n    }\n    return null\n  })()\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options))\n  return collisionShape\n}\n\nexport const createConeShape = function(root, options) {\n  options.type = TYPE.CONE\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const { x, y, z } = options.halfExtents\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case 'y':\n        return new Ammo.btConeShape(Math.max(x, z), y * 2)\n      case 'x':\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2)\n      case 'z':\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2)\n    }\n    return null\n  })()\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options))\n  return collisionShape\n}\n\nexport const createSphereShape = function(root, options) {\n  options.type = TYPE.SPHERE\n  _setOptions(options)\n\n  let radius\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\n    radius = options.sphereRadius\n  } else {\n    radius = _computeRadius(root, options, _computeBounds(root, options))\n  }\n\n  const collisionShape = new Ammo.btSphereShape(radius)\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options))\n\n  return collisionShape\n}\n\nexport const createHullShape = (function() {\n  const vertex = new Vector3()\n  const center = new Vector3()\n  return function(root, options) {\n    options.type = TYPE.HULL\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: hull')\n      return null\n    }\n\n    const bounds = _computeBounds(root, options)\n\n    const btVertex = new Ammo.btVector3()\n    const originalHull = new Ammo.btConvexHullShape()\n    originalHull.setMargin(options.margin)\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\n\n    let vertexCount = 0\n    _iterateGeometries(root, options, geo => {\n      vertexCount += geo.attributes.position.array.length / 3\n    })\n\n    const maxVertices = options.hullMaxVertices || 100000\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\n    if (vertexCount > maxVertices) {\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`)\n    }\n    const p = Math.min(1, maxVertices / vertexCount)\n\n    _iterateGeometries(root, options, (geo, transform) => {\n      adjustGeometryTranslateEXPERIMENTAL(geo, transform)\n\n      const components = geo.attributes.position.array\n      for (let i = 0; i < components.length; i += 3) {\n        if (Math.random() <= p) {\n          vertex\n            .set(components[i], components[i + 1], components[i + 2])\n            .applyMatrix4(transform)\n            .sub(center)\n          btVertex.setValue(vertex.x, vertex.y, vertex.z)\n          originalHull.addPoint(btVertex, i === components.length - 3) // todo: better to recalc AABB only on last geometry\n        }\n      }\n    })\n\n    let collisionShape = originalHull\n    if (originalHull.getNumVertices() >= 100) {\n      //Bullet documentation says don't use convexHulls with 100 verts or more\n      const shapeHull = new Ammo.btShapeHull(originalHull)\n      shapeHull.buildHull(options.margin)\n      Ammo.destroy(originalHull)\n      collisionShape = new Ammo.btConvexHullShape(\n        Ammo.getPointer(shapeHull.getVertexPointer()),\n        shapeHull.numVertices()\n      )\n      Ammo.destroy(shapeHull) // btConvexHullShape makes a copy\n    }\n\n    Ammo.destroy(btVertex)\n\n    _finishCollisionShape(collisionShape, options, _computeScale(root, options))\n    return collisionShape\n  }\n})()\n\nexport const createHACDShapes = (function() {\n  const v = new Vector3()\n  const center = new Vector3()\n  return function(root, options) {\n    options.type = TYPE.HACD\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: hacd')\n      return []\n    }\n\n    if (!Ammo.hasOwnProperty('HACD')) {\n      console.warn(\n        'HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\n      )\n      return []\n    }\n\n    const bounds = _computeBounds(root)\n    const scale = _computeScale(root, options)\n\n    let vertexCount = 0\n    let triCount = 0\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\n\n    _iterateGeometries(root, options, geo => {\n      vertexCount += geo.attributes.position.array.length / 3\n      if (geo.index) {\n        triCount += geo.index.array.length / 3\n      } else {\n        triCount += geo.attributes.position.array.length / 9\n      }\n    })\n\n    const hacd = new Ammo.HACD()\n    if (options.hasOwnProperty('compacityWeight')) hacd.SetCompacityWeight(options.compacityWeight)\n    if (options.hasOwnProperty('volumeWeight')) hacd.SetVolumeWeight(options.volumeWeight)\n    if (options.hasOwnProperty('nClusters')) hacd.SetNClusters(options.nClusters)\n    if (options.hasOwnProperty('nVerticesPerCH')) hacd.SetNVerticesPerCH(options.nVerticesPerCH)\n    if (options.hasOwnProperty('concavity')) hacd.SetConcavity(options.concavity)\n\n    const points = Ammo._malloc(vertexCount * 3 * 8)\n    const triangles = Ammo._malloc(triCount * 3 * 4)\n    hacd.SetPoints(points)\n    hacd.SetTriangles(triangles)\n    hacd.SetNPoints(vertexCount)\n    hacd.SetNTriangles(triCount)\n\n    const pptr = points / 8,\n      tptr = triangles / 4\n    _iterateGeometries(root, options, (geo, transform) => {\n      adjustGeometryTranslateEXPERIMENTAL(geo, transform)\n\n      const components = geo.attributes.position.array\n      const indices = geo.index ? geo.index.array : null\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i + 0], components[i + 1], components[i + 2])\n          .applyMatrix4(transform)\n          .sub(center)\n        Ammo.HEAPF64[pptr + i + 0] = v.x\n        Ammo.HEAPF64[pptr + i + 1] = v.y\n        Ammo.HEAPF64[pptr + i + 2] = v.z\n      }\n      if (indices) {\n        for (let i = 0; i < indices.length; i++) {\n          Ammo.HEAP32[tptr + i] = indices[i]\n        }\n      } else {\n        for (let i = 0; i < components.length / 3; i++) {\n          Ammo.HEAP32[tptr + i] = i\n        }\n      }\n    })\n\n    hacd.Compute()\n    Ammo._free(points)\n    Ammo._free(triangles)\n    const nClusters = hacd.GetNClusters()\n\n    const shapes = []\n    for (let i = 0; i < nClusters; i++) {\n      const hull = new Ammo.btConvexHullShape()\n      hull.setMargin(options.margin)\n      const nPoints = hacd.GetNPointsCH(i)\n      const nTriangles = hacd.GetNTrianglesCH(i)\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8)\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4)\n      hacd.GetCH(i, hullPoints, hullTriangles)\n\n      const pptr = hullPoints / 8\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3()\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0]\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1]\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2]\n        btVertex.setValue(px, py, pz)\n        hull.addPoint(btVertex, pi === nPoints - 1)\n        Ammo.destroy(btVertex)\n      }\n\n      _finishCollisionShape(hull, options, scale)\n      shapes.push(hull)\n    }\n\n    return shapes\n  }\n})()\n\nexport const createVHACDShapes = (function() {\n  const v = new Vector3()\n  const center = new Vector3()\n  return function(root, options) {\n    options.type = TYPE.VHACD\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: vhacd')\n      return []\n    }\n\n    if (!Ammo.hasOwnProperty('VHACD')) {\n      console.warn(\n        'VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\n      )\n      return []\n    }\n\n    const bounds = _computeBounds(root, options)\n    const scale = _computeScale(root, options)\n\n    let vertexCount = 0\n    let triCount = 0\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\n\n    _iterateGeometries(root, options, geo => {\n      vertexCount += geo.attributes.position.count\n      if (geo.index) {\n        triCount += geo.index.count / 3\n      } else {\n        triCount += geo.attributes.position.count / 3\n      }\n    })\n\n    const vhacd = new Ammo.VHACD()\n    const params = new Ammo.Parameters()\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\n    if (options.hasOwnProperty('resolution')) params.set_m_resolution(options.resolution)\n    if (options.hasOwnProperty('depth')) params.set_m_depth(options.depth)\n    if (options.hasOwnProperty('concavity')) params.set_m_concavity(options.concavity)\n    if (options.hasOwnProperty('planeDownsampling')) params.set_m_planeDownsampling(options.planeDownsampling)\n    if (options.hasOwnProperty('convexhullDownsampling'))\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling)\n    if (options.hasOwnProperty('alpha')) params.set_m_alpha(options.alpha)\n    if (options.hasOwnProperty('beta')) params.set_m_beta(options.beta)\n    if (options.hasOwnProperty('gamma')) params.set_m_gamma(options.gamma)\n    if (options.hasOwnProperty('pca')) params.set_m_pca(options.pca)\n    if (options.hasOwnProperty('mode')) params.set_m_mode(options.mode)\n    if (options.hasOwnProperty('maxNumVerticesPerCH')) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH)\n    if (options.hasOwnProperty('minVolumePerCH')) params.set_m_minVolumePerCH(options.minVolumePerCH)\n    if (options.hasOwnProperty('convexhullApproximation'))\n      params.set_m_convexhullApproximation(options.convexhullApproximation)\n    if (options.hasOwnProperty('oclAcceleration')) params.set_m_oclAcceleration(options.oclAcceleration)\n\n    const points = Ammo._malloc(vertexCount * 3 * 8)\n    const triangles = Ammo._malloc(triCount * 3 * 4)\n\n    let pptr = points / 8,\n      tptr = triangles / 4\n    _iterateGeometries(root, options, (geo, transform) => {\n      adjustGeometryTranslateEXPERIMENTAL(geo, transform)\n\n      const components = geo.attributes.position.array\n      const indices = geo.index ? geo.index.array : null\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i + 0], components[i + 1], components[i + 2])\n          .applyMatrix4(transform)\n          .sub(center)\n        Ammo.HEAPF64[pptr + 0] = v.x\n        Ammo.HEAPF64[pptr + 1] = v.y\n        Ammo.HEAPF64[pptr + 2] = v.z\n        pptr += 3\n      }\n      if (indices) {\n        for (let i = 0; i < indices.length; i++) {\n          Ammo.HEAP32[tptr] = indices[i]\n          tptr++\n        }\n      } else {\n        for (let i = 0; i < components.length / 3; i++) {\n          Ammo.HEAP32[tptr] = i\n          tptr++\n        }\n      }\n    })\n\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params)\n    Ammo._free(points)\n    Ammo._free(triangles)\n    const nHulls = vhacd.GetNConvexHulls()\n\n    const shapes = []\n    const ch = new Ammo.ConvexHull()\n    for (let i = 0; i < nHulls; i++) {\n      vhacd.GetConvexHull(i, ch)\n      const nPoints = ch.get_m_nPoints()\n      const hullPoints = ch.get_m_points()\n\n      const hull = new Ammo.btConvexHullShape()\n      hull.setMargin(options.margin)\n\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3()\n        const px = ch.get_m_points(pi * 3 + 0)\n        const py = ch.get_m_points(pi * 3 + 1)\n        const pz = ch.get_m_points(pi * 3 + 2)\n        btVertex.setValue(px, py, pz)\n        hull.addPoint(btVertex, pi === nPoints - 1)\n        Ammo.destroy(btVertex)\n      }\n\n      _finishCollisionShape(hull, options, scale)\n      shapes.push(hull)\n    }\n    Ammo.destroy(ch)\n    Ammo.destroy(vhacd)\n\n    return shapes\n  }\n})()\n\nexport const createTriMeshShape = (function() {\n  const va = new Vector3()\n  const vb = new Vector3()\n  const vc = new Vector3()\n  return function(root, options) {\n    options.type = TYPE.MESH\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: mesh')\n      return null\n    }\n\n    const scale = _computeScale(root, options)\n\n    const bta = new Ammo.btVector3()\n    const btb = new Ammo.btVector3()\n    const btc = new Ammo.btVector3()\n    const triMesh = new Ammo.btTriangleMesh(true, false)\n\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array\n      if (geo.index) {\n        for (let i = 0; i < geo.index.count; i += 3) {\n          const ai = geo.index.array[i] * 3\n          const bi = geo.index.array[i + 1] * 3\n          const ci = geo.index.array[i + 2] * 3\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(transform)\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(transform)\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(transform)\n          bta.setValue(va.x, va.y, va.z)\n          btb.setValue(vb.x, vb.y, vb.z)\n          btc.setValue(vc.x, vc.y, vc.z)\n          triMesh.addTriangle(bta, btb, btc, false)\n        }\n      } else {\n        for (let i = 0; i < components.length; i += 9) {\n          va.set(components[i + 0], components[i + 1], components[i + 2]).applyMatrix4(transform)\n          vb.set(components[i + 3], components[i + 4], components[i + 5]).applyMatrix4(transform)\n          vc.set(components[i + 6], components[i + 7], components[i + 8]).applyMatrix4(transform)\n          bta.setValue(va.x, va.y, va.z)\n          btb.setValue(vb.x, vb.y, vb.z)\n          btc.setValue(vc.x, vc.y, vc.z)\n          triMesh.addTriangle(bta, btb, btc, false)\n        }\n      }\n    })\n\n    let collisionShape\n    if (options.concave) collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\n    else collisionShape = new Ammo.btConvexTriangleMeshShape(triMesh, true)\n\n    collisionShape.resources = [triMesh]\n\n    Ammo.destroy(bta)\n    Ammo.destroy(btb)\n    Ammo.destroy(btc)\n\n    _finishCollisionShape(collisionShape, options, scale)\n    return collisionShape\n  }\n})()\n\nexport const createHeightfieldTerrainShape = function(root, options) {\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    console.warn('cannot use fit: all with type: heightfield')\n    return null\n  }\n  const heightfieldDistance = options.heightfieldDistance || 1\n  const heightfieldData = options.heightfieldData || []\n  const heightScale = options.heightScale || 0\n  const upAxis = options.hasOwnProperty('upAxis') ? options.upAxis : 1 // x = 0; y = 1; z = 2\n  const hdt = (() => {\n    switch (options.heightDataType) {\n      case 'short':\n        return Ammo.PHY_SHORT\n      case 'float':\n        return Ammo.PHY_FLOAT\n      default:\n        return Ammo.PHY_FLOAT\n    }\n  })()\n  const flipQuadEdges = options.hasOwnProperty('flipQuadEdges') ? options.flipQuadEdges : true\n\n  const heightStickLength = heightfieldData.length\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0\n\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4)\n  const ptr = data / 4\n\n  let minHeight = Number.POSITIVE_INFINITY\n  let maxHeight = Number.NEGATIVE_INFINITY\n  let index = 0\n  for (let l = 0; l < heightStickLength; l++) {\n    for (let w = 0; w < heightStickWidth; w++) {\n      const height = heightfieldData[l][w]\n      Ammo.HEAPF32[ptr + index] = height\n      index++\n      minHeight = Math.min(minHeight, height)\n      maxHeight = Math.max(maxHeight, height)\n    }\n  }\n\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\n    heightStickWidth,\n    heightStickLength,\n    data,\n    heightScale,\n    minHeight,\n    maxHeight,\n    upAxis,\n    hdt,\n    flipQuadEdges\n  )\n\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance)\n  collisionShape.setLocalScaling(scale)\n  Ammo.destroy(scale)\n\n  collisionShape.heightfieldData = data\n\n  _finishCollisionShape(collisionShape, options)\n  return collisionShape\n}\n\nfunction _setOptions(options) {\n  options.fit = options.hasOwnProperty('fit') ? options.fit : FIT.ALL\n  options.type = options.type || TYPE.HULL\n  options.minHalfExtent = options.hasOwnProperty('minHalfExtent') ? options.minHalfExtent : 0\n  options.maxHalfExtent = options.hasOwnProperty('maxHalfExtent') ? options.maxHalfExtent : Number.POSITIVE_INFINITY\n  options.cylinderAxis = options.cylinderAxis || 'y'\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.05\n  options.includeInvisible = options.hasOwnProperty('includeInvisible') ? options.includeInvisible : false\n\n  if (!options.offset) {\n    options.offset = new Vector3()\n  }\n\n  if (!options.orientation) {\n    options.orientation = new Quaternion()\n  }\n}\n\nconst _finishCollisionShape = function(collisionShape, options, scale) {\n  collisionShape.type = options.type\n  collisionShape.setMargin(options.margin)\n  collisionShape.destroy = () => {\n    for (let res of collisionShape.resources || []) {\n      Ammo.destroy(res)\n    }\n    if (collisionShape.heightfieldData) {\n      Ammo._free(collisionShape.heightfieldData)\n    }\n    Ammo.destroy(collisionShape)\n  }\n\n  // const localTransform = new Ammo.btTransform()\n  // const rotation = new Ammo.btQuaternion()\n  // localTransform.setIdentity()\n\n  // localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z)\n  // rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w)\n\n  // localTransform.setRotation(rotation)\n  // Ammo.destroy(rotation)\n\n  if (scale) {\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\n    collisionShape.setLocalScaling(localScale)\n    Ammo.destroy(localScale)\n  }\n\n  // collisionShape.localTransform = localTransform\n}\n\n// Calls `cb(geo, transform)` for each geometry under `root` whose vertices we should take into account for the physics shape.\n// `transform` is the transform required to transform the given geometry's vertices into root-local space.\nconst _iterateGeometries = (function() {\n  const transform = new Matrix4()\n  const inverse = new Matrix4()\n  const bufferGeometry = new BufferGeometry()\n  return function(root, options, cb) {\n    inverse.getInverse(root.matrixWorld)\n    root.traverse(mesh => {\n      if (\n        mesh.isMesh /*&&\n        (!Sky || mesh.__proto__ != Sky.prototype) &&\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)*/\n      ) {\n        if (mesh === root) {\n          transform.identity()\n        } else {\n          if (hasUpdateMatricesFunction) mesh.updateMatrices()\n          transform.multiplyMatrices(inverse, mesh.matrixWorld)\n        }\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\n        // things by the identity matrix\n        cb(mesh.geometry.isBufferGeometry ? mesh.geometry : bufferGeometry.fromGeometry(mesh.geometry), transform)\n      }\n    })\n  }\n})()\n\nconst _computeScale = function(root, options) {\n  // const scale = new Vector3(1, 1, 1)\n  // if (options.fit === FIT.ALL) {\n  //   scale.setFromMatrixScale(root.matrixWorld)\n  // }\n  // return scale\n  const { scale } = root\n  return scale\n}\n\nconst _computeRadius = (function() {\n  const v = new Vector3()\n  const center = new Vector3()\n  return function(root, options, bounds) {\n    let maxRadiusSq = 0\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center)\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i], components[i + 1], components[i + 2]).applyMatrix4(transform)\n        const dx = cx - v.x\n        const dy = cy - v.y\n        const dz = cz - v.z\n        maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz)\n      }\n    })\n    return Math.sqrt(maxRadiusSq)\n  }\n})()\n\nconst _computeHalfExtents = function(root, bounds, minHalfExtent, maxHalfExtent) {\n  const halfExtents = new Vector3()\n  return halfExtents\n    .subVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .clampScalar(minHalfExtent, maxHalfExtent)\n}\n\nconst _computeLocalOffset = function(matrix, bounds, target) {\n  target\n    .addVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .applyMatrix4(matrix)\n  return target\n}\n\n// returns the bounding box for the geometries underneath `root`.\nconst _computeBounds = (function() {\n  const v = new Vector3()\n  return function(root, options) {\n    const bounds = new Box3()\n    let minX = +Infinity\n    let minY = +Infinity\n    let minZ = +Infinity\n    let maxX = -Infinity\n    let maxY = -Infinity\n    let maxZ = -Infinity\n    bounds.min.set(0, 0, 0)\n    bounds.max.set(0, 0, 0)\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i], components[i + 1], components[i + 2]).applyMatrix4(transform)\n        if (v.x < minX) minX = v.x\n        if (v.y < minY) minY = v.y\n        if (v.z < minZ) minZ = v.z\n        if (v.x > maxX) maxX = v.x\n        if (v.y > maxY) maxY = v.y\n        if (v.z > maxZ) maxZ = v.z\n      }\n    })\n    bounds.min.set(minX, minY, minZ)\n    bounds.max.set(maxX, maxY, maxZ)\n    return bounds\n  }\n})()\n\n// adjusts the translate of the geometry\n// https://threejs.org/docs/#api/en/core/BufferGeometry.translate\nconst adjustGeometryTranslateEXPERIMENTAL = (geo, transform) => {\n  geo.computeBoundingBox()\n  const target = new Vector3()\n  geo.boundingBox.getCenter(target)\n  transform.makeTranslation(target.x, target.y, target.z)\n}\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { Quaternion } from '@enable3d/three-wrapper/src/index'\n\n// https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7228\nexport const addTorusShape = (config: { radius: number; tube: number; tubularSegments: number }, quat: Quaternion) => {\n  const { radius = 1, tube = 0.4, tubularSegments = 8 } = config\n\n  const SIMD_PI = Math.PI\n  const subdivisions = tubularSegments\n  const gap = Math.sqrt(2.0 * tube * tube - 2.0 * tube * tube * Math.cos((2.0 * SIMD_PI) / subdivisions))\n\n  const btHalfExtents = new Ammo.btVector3(tube, SIMD_PI / subdivisions + 0.5 * gap, tube)\n  const cylinderShape = new Ammo.btCylinderShape(btHalfExtents)\n  cylinderShape.setMargin(0.05)\n\n  const compoundShape = new Ammo.btCompoundShape()\n\n  const forward = new Ammo.btVector3(0, 0, 1)\n  const side = new Ammo.btVector3(0, radius, 0)\n  const rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w)\n\n  for (let x = 0; x < subdivisions; x++) {\n    const angle = (x * 2.0 * SIMD_PI) / subdivisions\n    const position = side.rotate(forward, angle)\n    const transform = new Ammo.btTransform()\n    rotation.setRotation(forward, angle + Math.PI / 2)\n    transform.setIdentity()\n    transform.setOrigin(position)\n    transform.setRotation(rotation)\n    compoundShape.addChildShape(transform, cylinderShape)\n  }\n\n  return compoundShape\n}\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport {\n  AnimationClip,\n  AnimationMixer,\n  Mesh,\n  Vector3,\n  Geometry,\n  BufferGeometry,\n  Material\n} from '@enable3d/three-wrapper/src/index'\n// Can I use circular dependencies if I only ise the typings?\nimport PhysicsBody from '@enable3d/ammo-physics/src/physicsBody'\nimport { AnimationAction } from '@enable3d/three-wrapper/src/index'\nimport logger from './logger'\n\ninterface ExtendedMesh extends Mesh {}\n\nclass ExtendedMesh extends Mesh {\n  private vector3 = new Vector3()\n  public shape: string\n  public name: string\n  public body: PhysicsBody\n  public hasBody: boolean = false\n  public animations?: AnimationClip[]\n  public mixer?: AnimationMixer\n  public anims: { [key: string]: AnimationClip } = {}\n  public action: AnimationAction\n  public currentAnimation: string = ''\n  public breakable: boolean\n  public fragmentDepth: number\n  public collided: boolean\n\n  constructor(geometry?: Geometry | BufferGeometry | undefined, material?: Material | Material[] | undefined) {\n    super(geometry, material)\n    this.name = `object-${this.id}`\n  }\n\n  /** Returns all values relative to the world. */\n  get world() {\n    return {\n      theta: this.worldTheta,\n      phi: this.worldPhi\n    }\n  }\n\n  /** Get the theta relative to the world. */\n  private get worldTheta() {\n    this.getWorldDirection(this.vector3)\n    return Math.atan2(this.vector3.x, this.vector3.z)\n  }\n\n  /** Get the phi relative to the world. */\n  private get worldPhi() {\n    this.getWorldDirection(this.vector3)\n    return Math.acos(this.vector3.y)\n  }\n\n  public setAction(name: string) {\n    if (this.mixer && this.anims.hasOwnProperty(name)) {\n      const action = this.mixer?.clipAction(this.anims[name])\n      action.time = 0\n      this.mixer.stopAllAction()\n      action.fadeIn(0.5)\n      action.play()\n      this.currentAnimation = name\n    } else {\n      logger(`[Phaser3D] Can't set animation ${name}`)\n    }\n  }\n}\n\nexport default ExtendedMesh\n","import { MeshLambertMaterial } from '@enable3d/three-wrapper/src/index'\n\nclass DefaultMaterial {\n  private _defaultMaterial: MeshLambertMaterial\n  constructor() {\n    this._defaultMaterial = new MeshLambertMaterial({ color: 0xcccccc })\n  }\n\n  public get() {\n    return this._defaultMaterial\n  }\n}\n\nexport default DefaultMaterial\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport {\n  MaterialConfig,\n  SphereConfig,\n  BoxConfig,\n  GroundConfig,\n  XYZ,\n  CylinderConfig,\n  ExtrudeConfig,\n  TorusConfig,\n  BoxObject,\n  GroundObject,\n  SphereObject,\n  CylinderObject,\n  ExtrudeObject,\n  AddMaterial\n} from './types'\nimport {\n  SphereGeometry,\n  BoxGeometry,\n  Scene,\n  MathUtils as THREE_Math,\n  Object3D,\n  Material,\n  Line,\n  Points,\n  Mesh,\n  MeshStandardMaterial,\n  MeshNormalMaterial,\n  MeshPhongMaterial,\n  LineBasicMaterial,\n  PointsMaterial,\n  MeshBasicMaterial,\n  CylinderGeometry,\n  ExtrudeGeometry,\n  MeshLambertMaterial,\n  BoxBufferGeometry,\n  SphereBufferGeometry,\n  ExtrudeBufferGeometry,\n  CylinderBufferGeometry,\n  MeshPhysicalMaterial,\n  MeshToonMaterial,\n  TorusGeometry,\n  TorusBufferGeometry\n} from '@enable3d/three-wrapper/src/index'\nimport ExtendedObject3D from './extendedObject3D'\nimport ExtendedMesh from './extendedMesh'\nimport logger from './logger'\nimport DefaultMaterial from './defaultMaterial'\n\nexport default class Factories {\n  protected defaultMaterial: DefaultMaterial\n\n  constructor(private scene: Scene) {\n    this.defaultMaterial = new DefaultMaterial()\n  }\n\n  public get make(): {\n    extrude: ExtrudeObject\n    // geometries\n    box: BoxObject\n    sphere: SphereObject\n    cylinder: CylinderObject\n    torus: (torusConfig?: TorusConfig, materialConfig?: MaterialConfig) => ExtendedObject3D\n  } {\n    return {\n      box: (boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) => this.makeBox(boxConfig, materialConfig),\n      sphere: (sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.makeSphere(sphereConfig, materialConfig),\n      cylinder: (cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.makeCylinder(cylinderConfig, materialConfig),\n      torus: (torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.makeTorus(torusConfig, materialConfig),\n      extrude: (extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) =>\n        this.makeExtrude(extrudeConfig, materialConfig)\n    }\n  }\n\n  public get add(): {\n    mesh: any\n    material: AddMaterial\n    extrude: ExtrudeObject\n    existing: any\n    ground: GroundObject\n    // geometries\n    box: BoxObject\n    sphere: SphereObject\n    cylinder: CylinderObject\n    torus: (torusConfig?: TorusConfig, materialConfig?: MaterialConfig) => ExtendedObject3D\n  } {\n    return {\n      // effectComposer: () => this.addEffectComposer(),\n      mesh: (mesh: any) => this.addMesh(mesh),\n      // group: (...children) => this.addGroup(children),\n      existing: (object: ExtendedObject3D | Mesh | Line | Points) => this.addExisting(object),\n      //  Geometry\n      box: (boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) => this.addBox(boxConfig, materialConfig),\n      ground: (groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) =>\n        this.addGround(groundConfig, materialConfig),\n      //...\n      sphere: (sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.addSphere(sphereConfig, materialConfig),\n      cylinder: (cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.addCylinder(cylinderConfig, materialConfig),\n      torus: (torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.addTorus(torusConfig, materialConfig),\n      extrude: (extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) =>\n        this.addExtrude(extrudeConfig, materialConfig),\n      //...\n      material: (materialConfig: MaterialConfig = {}) => this.addMaterial(materialConfig)\n    }\n  }\n\n  private addExisting(object: ExtendedObject3D | Mesh | Line | Points) {\n    this.scene.add(object)\n  }\n\n  private addMesh(mesh: Object3D) {\n    if (Array.isArray(mesh)) {\n      for (let i = 0; i < mesh.length; i++) {\n        this.scene.add(mesh[i])\n      }\n    } else {\n      this.scene.add(mesh)\n    }\n    return this\n  }\n\n  private createMesh(geometry: any, material: Material | Material[], position: XYZ): Line | Points | Mesh {\n    const { x = 0, y = 0, z = 0 } = position\n\n    let obj\n    switch (!Array.isArray(material) && material.type) {\n      case 'LineBasicMaterial':\n        obj = new Line(geometry, material)\n        break\n      case 'PointsMaterial':\n        obj = new Points(geometry, material)\n        break\n      default:\n        obj = new ExtendedMesh(geometry, material)\n        break\n    }\n    obj.position.set(x, y, z)\n    obj.castShadow = obj.receiveShadow = true\n\n    return obj\n  }\n\n  private makeExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig) {\n    const { x, y, z, name, shape, autoCenter = true, breakable = false, bufferGeometry = true, ...rest } = extrudeConfig\n    const { depth = 1, bevelEnabled = false } = rest\n    const geometry =\n      bufferGeometry || breakable\n        ? new ExtrudeBufferGeometry(shape, { depth, bevelEnabled, ...rest })\n        : new ExtrudeGeometry(shape, { depth, bevelEnabled, ...rest })\n    const material = this.addMaterial(materialConfig)\n    const mesh = this.createMesh(geometry, material, { x, y, z }) as ExtendedObject3D\n    // auto adjust the center for custom shapes\n    if (autoCenter) mesh.geometry.center()\n    mesh.name = name || `body_id_${mesh.id}`\n    mesh.shape = 'extrude'\n    return mesh\n  }\n\n  private addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const obj = this.makeExtrude(extrudeConfig, materialConfig)\n    this.scene.add(obj)\n    return obj\n  }\n\n  private makeSphere(sphereConfig: SphereConfig, materialConfig: MaterialConfig): ExtendedObject3D {\n    const { x, y, z, name, breakable = false, bufferGeometry = true, ...rest } = sphereConfig\n    const geometry =\n      bufferGeometry || breakable\n        ? new SphereBufferGeometry(\n            rest.radius || 1,\n            rest.widthSegments || 16,\n            rest.heightSegments || 12,\n            rest.phiStart || undefined,\n            rest.phiLength || undefined,\n            rest.thetaStart || undefined,\n            rest.thetaLength || undefined\n          )\n        : new SphereGeometry(\n            rest.radius || 1,\n            rest.widthSegments || 16,\n            rest.heightSegments || 12,\n            rest.phiStart || undefined,\n            rest.phiLength || undefined,\n            rest.thetaStart || undefined,\n            rest.thetaLength || undefined\n          )\n    const material = this.addMaterial(materialConfig)\n    const mesh = this.createMesh(geometry, material, { x, y, z }) as ExtendedObject3D\n    mesh.name = name || `body_id_${mesh.id}`\n    mesh.shape = 'sphere'\n    return mesh\n  }\n\n  private addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const obj = this.makeSphere(sphereConfig, materialConfig)\n    this.scene.add(obj)\n    return obj\n  }\n\n  private makeBox(boxConfig: BoxConfig, materialConfig: MaterialConfig): ExtendedObject3D {\n    const { x, y, z, name, breakable = false, bufferGeometry = true, ...rest } = boxConfig\n    const geometry =\n      bufferGeometry || breakable\n        ? new BoxBufferGeometry(\n            rest.width || 1,\n            rest.height || 1,\n            rest.depth || 1,\n            rest.widthSegments || undefined,\n            rest.heightSegments || undefined,\n            rest.depthSegments || undefined\n          )\n        : new BoxGeometry(\n            rest.width || 1,\n            rest.height || 1,\n            rest.depth || 1,\n            rest.widthSegments || undefined,\n            rest.heightSegments || undefined,\n            rest.depthSegments || undefined\n          )\n    const material = this.addMaterial(materialConfig)\n    const mesh = this.createMesh(geometry, material, { x, y, z }) as ExtendedObject3D\n    mesh.name = name || `body_id_${mesh.id}`\n    mesh.shape = 'box'\n    return mesh\n  }\n\n  private addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const obj = this.makeBox(boxConfig, materialConfig)\n    this.scene.add(obj)\n    return obj\n  }\n\n  private addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const obj = this.makeBox(groundConfig, materialConfig)\n    obj.rotateX(THREE_Math.degToRad(90))\n    this.scene.add(obj)\n    return obj\n  }\n\n  private makeCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const { x, y, z, name, breakable = false, bufferGeometry = true, ...rest } = cylinderConfig\n    const geometry =\n      bufferGeometry || breakable\n        ? new CylinderBufferGeometry(\n            rest.radiusTop || 1,\n            rest.radiusBottom || 1,\n            rest.height || 1,\n            rest.radiusSegments || undefined,\n            rest.heightSegments || undefined,\n            rest.openEnded || undefined,\n            rest.thetaStart || undefined,\n            rest.thetaLength || undefined\n          )\n        : new CylinderGeometry(\n            rest.radiusTop || 1,\n            rest.radiusBottom || 1,\n            rest.height || 1,\n            rest.radiusSegments || undefined,\n            rest.heightSegments || undefined,\n            rest.openEnded || undefined,\n            rest.thetaStart || undefined,\n            rest.thetaLength || undefined\n          )\n    const material = this.addMaterial(materialConfig)\n    const mesh = this.createMesh(geometry, material, { x, y, z }) as ExtendedObject3D\n    mesh.name = name || `body_id_${mesh.id}`\n    mesh.shape = 'cylinder'\n    return mesh\n  }\n\n  private addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const obj = this.makeCylinder(cylinderConfig, materialConfig)\n    this.scene.add(obj)\n    return obj\n  }\n\n  // https://threejs.org/docs/index.html#api/en/geometries/TorusBufferGeometry\n  private makeTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const { x, y, z, name, breakable = false, bufferGeometry = true, ...rest } = torusConfig\n    const geometry =\n      bufferGeometry || breakable\n        ? new TorusBufferGeometry(\n            rest.radius || undefined,\n            rest.tube || undefined,\n            rest.radialSegments || undefined,\n            rest.tubularSegments || undefined,\n            rest.arc || undefined\n          )\n        : new TorusGeometry(\n            rest.radius || undefined,\n            rest.tube || undefined,\n            rest.radialSegments || undefined,\n            rest.tubularSegments || undefined,\n            rest.arc || undefined\n          )\n    const material = this.addMaterial(materialConfig)\n    const mesh = this.createMesh(geometry, material, { x, y, z }) as ExtendedObject3D\n    mesh.name = name || `body_id_${mesh.id}`\n    mesh.shape = 'torus'\n    return mesh\n  }\n\n  private addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}): ExtendedObject3D {\n    const obj = this.makeTorus(torusConfig, materialConfig)\n    this.scene.add(obj)\n    return obj\n  }\n\n  private addMaterial(materialConfig: MaterialConfig = {}) {\n    const type = Object.keys(materialConfig)[0]\n    let material: Material | Material[]\n\n    // if (type) {\n    //   const { map } = materialConfig[type]\n    //   if (typeof map === 'string') materialConfig[type].map = this.loadTexture(map)\n    // }\n\n    switch (type) {\n      case 'basic':\n        material = new MeshBasicMaterial(materialConfig.basic)\n        break\n      case 'normal':\n        material = new MeshNormalMaterial(materialConfig.normal)\n        break\n      case 'standard':\n        material = new MeshStandardMaterial(materialConfig.standard)\n        break\n      case 'lambert':\n        material = new MeshLambertMaterial(materialConfig.lambert)\n        break\n      case 'phong':\n        material = new MeshPhongMaterial(materialConfig.phong)\n        break\n      case 'physical':\n        if (typeof materialConfig.physical !== 'undefined') {\n          material = new MeshPhysicalMaterial(materialConfig.physical)\n        } else {\n          logger('You need to pass parameters to the physical material. (Fallback to default material)')\n          material = this.defaultMaterial.get()\n        }\n        break\n      case 'toon':\n        material = new MeshToonMaterial(materialConfig.toon)\n        break\n      case 'line':\n        material = new LineBasicMaterial(materialConfig.line)\n        break\n      case 'points':\n        material = new PointsMaterial(materialConfig.points)\n        break\n      case 'custom':\n        material = materialConfig.custom || this.defaultMaterial.get()\n        break\n      default:\n        material = this.defaultMaterial.get()\n        break\n    }\n\n    return material\n  }\n}\n","// Inspired by https://github.com/playcanvas/engine/blob/master/examples/wasm-loader.js\nconst wasmSupported = (() => {\n  try {\n    if (typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function') {\n      const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00))\n      if (module instanceof WebAssembly.Module) return new WebAssembly.Instance(module) instanceof WebAssembly.Instance\n    }\n  } catch (e) {}\n  return false\n})()\n\nconst loadScriptAsync = (url: string, doneCallback: any) => {\n  var tag = document.createElement('script')\n  tag.onload = () => {\n    doneCallback()\n  }\n  tag.onerror = () => {\n    throw new Error('failed to load ' + url)\n  }\n  tag.async = true\n  tag.src = url\n  document.head.appendChild(tag)\n}\n\nconst loadAmmoModule = (path: string, doneCallback: any) => {\n  // console.log(wasmSupported ? 'WebAssembly is supported' : 'WebAssembly is not supported')\n  if (wasmSupported) loadScriptAsync(`${path}/ammo.wasm.js`, () => doneCallback())\n  else loadScriptAsync(`${path}/ammo.js`, () => doneCallback())\n}\n\nexport default loadAmmoModule\n","import loadAmmoModule from './wasmLoader'\n\nconst PhysicsLoader = (path: string, callback: Function) => {\n  window.__loadPhysics = true\n  loadAmmoModule(path, () => {\n    Ammo().then(() => {\n      callback()\n    })\n  })\n}\n\nexport { PhysicsLoader }\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/yandeu/enable3d\n * @license      {@link https://github.com/yandeu/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport logger from '@enable3d/common/src/logger'\nimport PhysicsBody from './physicsBody'\nimport {\n  SphereConfig,\n  GroundConfig,\n  MaterialConfig,\n  BoxConfig,\n  CylinderConfig,\n  ExtrudeConfig,\n  Phaser3DConfig,\n  AddExistingConfig,\n  TorusConfig\n} from '@enable3d/common/src/types'\nimport applyMixins from '@enable3d/common/src/applyMixins'\nimport ExtendedObject3D from '@enable3d/common/src/extendedObject3D'\nimport Shapes from './shapes'\nimport Constraints from './constraints'\nimport Events from './events'\nimport EventEmitter from 'eventemitter3'\nimport Physics from './physics'\nimport { Vector3, Quaternion, Scene, Mesh, Euler } from '@enable3d/three-wrapper/src/index'\nimport { createCollisionShapes } from './three-to-ammo'\nimport { addTorusShape } from './torusShape'\nimport Factories from '@enable3d/common/src/factories'\nimport { REVISION } from '@enable3d/three-wrapper/src/index'\n\nimport { PhysicsLoader } from '@enable3d/common/src/physicsLoader'\nimport DefaultMaterial from '@enable3d/common/src/defaultMaterial'\nexport { PhysicsLoader }\n\nimport * as Types from '@enable3d/common/src/types'\nexport { Types }\n\ninterface AmmoPhysics extends Physics, Constraints, Shapes, Events {}\n\nclass AmmoPhysics extends EventEmitter {\n  public tmpTrans: Ammo.btTransform\n  protected rigidBodies: ExtendedObject3D[] = []\n  protected objectsAmmo: { [ptr: number]: any } = {}\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\n  protected gravity: { x: number; y: number; z: number }\n  protected factory: Factories\n\n  protected tmpEuler: Euler\n  protected tmpQuaternion: Quaternion\n  protected tmpVector3: Vector3\n  protected tmpBtVector3: Ammo.btVector3\n  protected tmpBtQuaternion: Ammo.btQuaternion\n\n  protected defaultMaterial: DefaultMaterial\n\n  constructor(public scene: Scene, public config: Phaser3DConfig = {}) {\n    super()\n\n    this.tmpEuler = new Euler()\n    this.tmpQuaternion = new Quaternion()\n    this.tmpVector3 = new Vector3()\n    this.tmpBtVector3 = new Ammo.btVector3()\n    this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1)\n\n    this.defaultMaterial = new DefaultMaterial()\n\n    const version = `three.js version ${REVISION}`\n    console.log(\n      `%c %c %c %c %c ${version} %c https://threejs.org/`,\n      'background: #ff0000',\n      'background: #ffff00',\n      'background: #00ff00',\n      'background: #00ffff',\n      'color: #fff; background: #000000;',\n      'background: none'\n    )\n\n    this.factory = new Factories(scene)\n\n    this.emptyV3 = new Vector3()\n    this.impactPoint = new Vector3()\n    this.impactNormal = new Vector3()\n\n    this.gravity = config.gravity || { x: 0, y: -9.81, z: 0 }\n\n    this.start()\n  }\n\n  public get debug() {\n    return {\n      enable: () => {\n        this.debugDrawer.enable()\n      },\n      mode: (debugMode: number = 1) => {\n        this.debugDrawer.setDebugMode(debugMode)\n      },\n      disable: () => {\n        this.debugDrawer.disable()\n      }\n    }\n  }\n\n  private start() {\n    if (typeof Ammo === 'undefined') {\n      logger('Are you sure you included ammo.js?')\n      return\n    }\n\n    if (typeof Ammo === 'function')\n      Ammo().then(() => {\n        this.setup()\n      })\n    else this.setup()\n  }\n\n  public get add() {\n    return {\n      collider: (\n        object1: ExtendedObject3D,\n        object2: ExtendedObject3D,\n        eventCallback: (event: 'start' | 'collision' | 'end') => void\n      ) => this.addCollider(object1, object2, eventCallback),\n      constraints: this.addConstraints,\n      existing: (object: ExtendedObject3D, config?: AddExistingConfig) => this.addExisting(object, config),\n      sphere: (sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.addSphere(sphereConfig, materialConfig),\n      ground: (groundConfig: GroundConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.addGround(groundConfig, materialConfig),\n      box: (boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) => this.addBox(boxConfig, materialConfig),\n      cylinder: (cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.addCylinder(cylinderConfig, materialConfig),\n      torus: (torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) =>\n        this.addTorus(torusConfig, materialConfig),\n      extrude: (extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) =>\n        this.addExtrude(extrudeConfig, materialConfig)\n    }\n  }\n\n  public addCompoundShape(shapes: any) {\n    const compoundShape = new Ammo.btCompoundShape()\n    shapes.forEach((obj: any, i: number) => {\n      const transform = new Ammo.btTransform()\n\n      const pos = new Vector3(obj.x || 0, obj.y || 0, obj.z || 0)\n      if (obj.tmp?.offset) {\n        const o = obj.tmp.offset\n        pos.add(new Vector3(o.x, o.y, o.z))\n      }\n      transform.setIdentity()\n      transform.setOrigin(new Ammo.btVector3(pos.x || 0, pos.y || 0, pos.z || 0))\n      // TODO add rotation\n      // transform.setRotation(new Ammo.btQuaternion(quat.x || 0, quat.y || 0, quat.z || 0, quat.w || 1))\n      compoundShape.addChildShape(transform, shapes[i])\n    })\n    return compoundShape\n  }\n\n  protected addExisting(object: ExtendedObject3D, config: AddExistingConfig = {}): any {\n    const { position: pos, quaternion: quat, hasBody } = object\n\n    const {\n      mass = 1,\n      autoCenter = false,\n      offset = undefined,\n      shapes = [],\n      breakable = false,\n      addRigidBody = true\n    } = config\n\n    const defaultParams = {\n      width: 1,\n      height: 1,\n      depth: 1,\n      radius: 1,\n      radiusTop: 1, // for the cylinder\n      radiusBottom: 1, // for the cylinder\n      tube: 0.4, // for the torus\n      tubularSegments: 6 // for the torus\n    }\n\n    // check if the object has children\n    const children: any[] = []\n    if (object.children.length >= 1) {\n      object.children.forEach((child: any) => {\n        const shape = this.addExisting(child, { addRigidBody: false })\n        shape.tmp = { offset: child.position.clone() }\n        children.push(shape)\n      })\n    }\n\n    let shape = 'box'\n    const type = object.geometry.type\n    // retrieve the shape from the geometry\n    if (/box/i.test(type)) shape = 'box'\n    else if (/cone/i.test(type)) shape = 'cone'\n    else if (/cylinder/i.test(type)) shape = 'cylinder'\n    else if (/extrude/i.test(type)) shape = 'extrude'\n    else if (/plane/i.test(type)) shape = 'plane'\n    else if (/sphere/i.test(type)) shape = 'sphere'\n    else if (/torus/i.test(type)) shape = 'torus'\n\n    let params = {}\n    if (config.shape) {\n      params = { ...defaultParams, ...config }\n      shape = config.shape\n    } else if (object.shape) {\n      // @ts-ignore\n      params = { ...defaultParams, ...object?.geometry?.parameters }\n      shape = object.shape\n    } else {\n      // @ts-ignore\n      params = { ...defaultParams, ...object?.geometry?.parameters }\n    }\n\n    // Add default params if undefined\n    Object.keys(params).forEach(key => {\n      // @ts-ignore\n      if (typeof params[key] === 'undefined' && defaultParams[key]) {\n        // @ts-ignore\n        params[key] = defaultParams[key]\n      }\n    })\n\n    if (hasBody) {\n      logger(`Object \"${object.name}\" already has a physical body!`)\n      return\n    }\n\n    // auto adjust the center for custom shapes\n    if (autoCenter) object.geometry.center()\n\n    // some aliases\n    if (shape === 'extrude') shape = 'hacd'\n    if (shape === 'mesh' || shape === 'convex') shape = 'convexMesh'\n    if (shape === 'concave') shape = 'concaveMesh'\n\n    let Shape: any\n\n    // combine multiple shapes to one compound shape\n    if (shapes.length > 0) {\n      const tmp: any[] = [] // stores all the raw shapes\n\n      shapes.forEach(obj => {\n        tmp.push(this.addShape({ shape: obj.shape, params: { ...obj } }))\n      })\n\n      Shape = this.addCompoundShape(tmp)\n    } else {\n      Shape = this.addShape({ shape, shapes, params, object, quat })\n    }\n\n    if (!Shape) {\n      logger(`Could not recognize shape \"${shape}\"!`)\n      return\n    }\n\n    Shape.setMargin(0.05)\n\n    if (children.length >= 1) {\n      Shape = this.addCompoundShape([Shape, ...children])\n    }\n\n    if (!addRigidBody) return Shape\n\n    this.addRigidBodyToShape(object, Shape, { mass, pos, quat, breakable, offset, config })\n  }\n\n  public addRigidBodyToShape(object: any, Shape: any, options: any) {\n    const {\n      mass = 1,\n      pos = new Vector3(0, 0, 0),\n      quat = new Quaternion(0, 0, 0, 1),\n      breakable = false,\n      offset = { x: 0, y: 0, z: 0 },\n      config = {}\n    } = options\n    this.addRigidBody(object, Shape, mass, pos, quat)\n    this.addBodyProperties(object, config)\n\n    if (breakable) object.body.breakable = true\n    if (offset) object.body.offset = { x: 0, y: 0, z: 0, ...offset }\n  }\n\n  private addShape(opts: any) {\n    const { shape, object, params, quat } = opts\n\n    let Shape\n    switch (shape) {\n      case 'box':\n        Shape = new Ammo.btBoxShape(new Ammo.btVector3(params.width / 2, params.height / 2, params.depth / 2))\n        break\n      case 'sphere':\n        Shape = new Ammo.btSphereShape(params.radius)\n        break\n      case 'cylinder':\n        Shape = new Ammo.btCylinderShape(new Ammo.btVector3(params.radiusTop, params.height / 2, 0))\n        break\n      case 'torus':\n        Shape = addTorusShape(params, quat)\n        break\n      case 'hull':\n        Shape = createCollisionShapes(object, { type: 'hull' })\n        break\n      case 'hacd':\n        Shape = createCollisionShapes(object, { type: 'hacd' })\n        break\n      case 'vhacd':\n        Shape = createCollisionShapes(object, { type: 'vhacd' })\n        break\n      case 'convexMesh':\n        Shape = createCollisionShapes(object, { type: 'mesh', concave: false })\n        break\n      case 'concaveMesh':\n        Shape = createCollisionShapes(object, { type: 'mesh', concave: true })\n        break\n    }\n\n    if (Array.isArray(Shape)) {\n      const compoundShape = new Ammo.btCompoundShape()\n      Shape.forEach(shape => {\n        const transform = new Ammo.btTransform()\n        transform.setIdentity()\n        compoundShape.addChildShape(transform, shape)\n      })\n      Shape = compoundShape\n    }\n\n    return Shape\n  }\n\n  protected createRigidBody(physicsShape: any, mass: number, pos: Vector3, quat: Quaternion) {\n    const transform = new Ammo.btTransform()\n    transform.setIdentity()\n    transform.setOrigin(new Ammo.btVector3(pos.x, pos.y, pos.z))\n    transform.setRotation(new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w))\n    const motionState = new Ammo.btDefaultMotionState(transform)\n    const localInertia = new Ammo.btVector3(0, 0, 0)\n    if (mass > 0) {\n      physicsShape.calculateLocalInertia(mass, localInertia)\n    }\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, physicsShape, localInertia)\n    const rigidBody = new Ammo.btRigidBody(rbInfo)\n    return rigidBody\n  }\n\n  protected addRigidBody(\n    threeObject: ExtendedObject3D,\n    physicsShape: any,\n    mass: number,\n    pos: Vector3,\n    quat: Quaternion,\n    scale?: { x: number; y: number; z: number }\n  ) {\n    threeObject.position.copy(pos)\n    threeObject.quaternion.copy(quat)\n\n    const rigidBody = this.createRigidBody(physicsShape, mass, pos, quat)\n\n    if (scale) {\n      const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\n      physicsShape.setLocalScaling(localScale)\n      Ammo.destroy(localScale)\n    }\n\n    if (mass > 0) {\n      // Disable deactivation\n      rigidBody.setActivationState(4)\n    }\n\n    this.rigidBodies.push(threeObject)\n    this.physicsWorld.addRigidBody(rigidBody)\n\n    const ptr = Object.values(rigidBody)[0]\n    // @ts-ignore\n    rigidBody.name = threeObject.name\n    threeObject.body = new PhysicsBody(this, rigidBody)\n    threeObject.hasBody = true\n    // @ts-ignore\n    threeObject.ptr = ptr\n    this.objectsAmmo[ptr] = threeObject\n  }\n\n  protected addBodyProperties(obj: ExtendedObject3D, config: any) {\n    const { friction = 0.5, collisionFlags = 0 } = config\n    obj.body.setCollisionFlags(collisionFlags)\n    obj.body.setFriction(friction)\n  }\n}\n\napplyMixins(AmmoPhysics, [Physics, Constraints, Shapes, Events])\n\nexport { AmmoPhysics }\n","/**\n * To create the UMD bundle\n */\nexport * from './index'\n\n// import * as THREE from '@enable3d/three-wrapper/src/index'\n// export { THREE }\n"],"sourceRoot":""}